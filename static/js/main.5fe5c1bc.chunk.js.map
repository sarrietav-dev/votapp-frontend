{"version":3,"sources":["store/thunks/utils/server-url.js","store/reducers/alerts.reducer.js","store/reducers/auth-token.reducer.js","store/reducers/dialogs.reducer.js","components/login/RegisterDialog.jsx","store/thunks/register.thunks.js","components/login/Login.jsx","store/thunks/auth.thunks.js","store/thunks/election.thunks.js","store/reducers/elections.reducer.js","store/reducers/utils/reducer.utils.js","store/reducers/panel.reducer.js","components/Navbar.jsx","components/dashboard/UserSelector.jsx","store/thunks/user.thunks.js","components/dashboard/CreateElectionDialog.jsx","components/dashboard/ElectionCard.jsx","components/FabButton.jsx","components/Blob.jsx","components/dashboard/Dashboard.jsx","components/AuthRoute.jsx","components/election/DeleteElectionWarning.jsx","components/election/ElectionSettings.jsx","components/election/utils/parse-data.js","components/election/WinnerChart.jsx","components/election/ElectionDashboard.jsx","components/AlertMessage.jsx","store/reducers/unverified-users.reducer.js","components/admin-panel/UnverifiedUser.jsx","store/thunks/verify.thunks.js","components/admin-panel/VerifyUsersDialog.jsx","store/reducers/locales.reducer.js","locales/en.js","locales/es.js","components/admin-panel/LocaleSelect.jsx","components/admin-panel/AdminPanel.jsx","components/election/CandidateCard.jsx","components/election/VotingPanel.jsx","App.js","store/reducers/users.reducer.js","store/reducers/reducer.js","store/store.js","index.js"],"names":["process","alertSlice","createSlice","name","initialState","open","message","variant","reducers","raiseAlert","state","action","payload","closeAlert","_action","actions","authSlice","authToken","isAdmin","_id","setAuthToken","logOut","setData","is_admin","dialogSlice","isOpen","openDialog","closeDialog","RegisterDialog","useSelector","dialog","locales","locale","registerDialog","useForm","handleSubmit","control","dispatch","useDispatch","Dialog","maxWidth","fullWidth","DialogTitle","dialogTitle","onSubmit","data","a","axios","method","url","serverUrl","then","Object","prototype","hasOwnProperty","call","catch","error","response","registerThunk","DialogContent","Grid","container","spacing","direction","item","xs","as","TextField","label","yourNae","defaultValue","rules","required","type","code","maxLength","password","FormControl","component","FormLabel","gender","RadioGroup","aria-label","FormControlLabel","value","female","Radio","male","DialogActions","Button","onClick","color","cancel","send","useStyles","makeStyles","theme","padding","Login","classes","history","useHistory","auth","login","useEffect","push","Container","className","token","err","loginThunk","alignItems","justify","style","minHeight","min","max","logIn","requestAccess","vote","createAsyncThunk","thunkAPI","patch","electionId","userId","candidateId","res","endElection","electionSlice","elections","currentElection","selectedCandidates","fetchElections","saveElection","setCurrentElection","filter","election","emptyCurrentElection","deleteElection","editElection","electionsWithoutTarget","deleteOne","targetElection","edit","setCandidates","extraReducers","fulfilled","votedCandidate","candidates","candidate","votes","registeredVotes","status","panelSlice","openPanel","closePanel","navbarRightButtons","marginLeft","navbar","marginBottom","Navbar","actionIcon","path","AppBar","position","Toolbar","IconButton","edge","from","Typography","Tooltip","title","localStorage","removeItem","defaultProps","UserSelector","users","userSelector","Autocomplete","multiple","options","getOptionLabel","option","onChange","event","renderTags","getTagProps","map","index","Chip","renderInput","params","placeholder","fetchUsers","get","CreateElectionDialog","useState","isChecked","createElectionDialog","handleClose","onClose","createElection","saveElectionThunk","autoFocus","margin","id","disabled","Switch","checked","selectCandidates","create","card","width","editButton","ElectionCard","Card","CardActionArea","CardContent","fab","top","right","bottom","left","FabButton","Fab","Blob","text","display","justifyContent","alignSelf","justifySelf","viewBox","xmlns","height","fill","d","transform","Dashboard","dashboard","length","blob","shortid","generate","AuthRoute","children","rest","render","to","DeleteElectionWarning","setIsWarningOpen","deleteElectionWarning","dialogContent","deleteElectionThunk","continue","ElectionSettings","isWarningOpen","electionSettings","editElectionThunk","accept","labels","datasets","backgroundColor","borderColor","borderWidth","WinnerChart","parseData","maintainAspectRatio","electionWrapper","banner","banner__title","marginTop","banner__position","ElectionDashboard","electionDashboard","hasUserVoted","keys","raiseAlertMessage","electionEnded","userVoted","voteNow","AlertMessage","alert","Snackbar","autoHideDuration","Alert","elevation","severity","unverifiedUsersSlice","unverifiedUsers","fetchUnverifiedUsers","verifyUser","user","denyUser","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","summary","summaryText","details","flexDirection","UnverifiedUser","Accordion","AccordionSummary","expandIcon","AccordionDetails","gutterBottom","email","AccordionActions","VerifyUsersDialog","language","yourName","adminPanel","verifyUsers","candidateCard","cardTitle","setLocale","LocaleSelect","currentLanguage","InputLabel","Select","e","target","MenuItem","VerifyUsersButton","handleAddUserClick","itemText","ListItem","button","ListItemIcon","ListItemText","primary","AdminPanel","setOpenDialog","panel","unverified","Drawer","anchor","List","CandidateCard","CardHeader","avatar","Avatar","CardActions","votingPanel","VotingPanel","app","App","usersSlice","setUser","rootReducer","combineReducers","configureStore","reducer","dotenvConfig","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.5fe5c1bc.chunk.js","sourcesContent":["export default process.env.NODE_ENV === 'development'\n  ? 'http://localhost:5000/api'\n  : 'https://votapp-backend.herokuapp.com/api';\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst alertSlice = createSlice({\n  name: 'alerts',\n  initialState: {\n    open: false,\n    message: '',\n    variant: 'info',\n  },\n  reducers: {\n    raiseAlert(state, action) {\n      state.open = true;\n      state.message = action.payload.message;\n      state.variant = action.payload.variant;\n    },\n    closeAlert(state, _action) {\n      state.open = false;\n      state.message = '';\n      state.variant = '';\n    },\n  },\n});\n\nexport const { raiseAlert, closeAlert } = alertSlice.actions;\nexport default alertSlice.reducer;\n","/* eslint-disable operator-linebreak */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    authToken: '',\n    isAdmin: '',\n    _id: '',\n  },\n  reducers: {\n    setAuthToken(state, action) {\n      state.authToken = action.payload;\n    },\n    logOut(state) {\n      state.authToken = '';\n      state.isAdmin = false;\n      state._id = '';\n    },\n    setData(state, action) {\n      state.isAdmin = action.payload.is_admin;\n      state._id = action.payload._id;\n    },\n  },\n});\n\nexport const { logOut, setAuthToken, setData } = authSlice.actions;\nexport default authSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  isOpen: false,\n};\n\nconst dialogSlice = createSlice({\n  name: 'dialog',\n  initialState,\n  reducers: {\n    openDialog(state) {\n      state.isOpen = true;\n    },\n    closeDialog(state) {\n      state.isOpen = false;\n    },\n  },\n});\n\nexport const { openDialog, closeDialog } = dialogSlice.actions;\nexport default dialogSlice.reducer;\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react/jsx-wrap-multilines */\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  TextField,\n} from '@material-ui/core';\nimport React from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeDialog } from '../../store/reducers/dialogs.reducer';\nimport registerThunk from '../../store/thunks/register.thunks';\n\nconst RegisterDialog = () => {\n  const isOpen = useSelector((state) => state.dialog.isOpen);\n  const locales = useSelector((state) => state.locales.locale.registerDialog);\n  const { handleSubmit, control } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    dispatch(registerThunk(data));\n    dispatch(closeDialog());\n  };\n  const handleCancel = () => dispatch(closeDialog());\n\n  return (\n    <Dialog open={isOpen} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>{locales.dialogTitle}</DialogTitle>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogContent>\n          <Grid container spacing={3} direction=\"column\">\n            <Grid item xs={12}>\n              <Controller\n                name=\"name\"\n                as={<TextField name=\"name\" label={locales.yourNae} fullWidth />}\n                control={control}\n                defaultValue=\"\"\n                rules={{\n                  required: true,\n                }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Controller\n                name=\"code\"\n                as={\n                  <TextField\n                    type=\"number\"\n                    name=\"code\"\n                    label={locales.code}\n                    fullWidth\n                  />\n                }\n                control={control}\n                defaultValue=\"\"\n                rules={{\n                  required: true,\n                  maxLength: 10,\n                }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Controller\n                name=\"email\"\n                as={\n                  <TextField\n                    type=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    fullWidth\n                  />\n                }\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: true }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Controller\n                name=\"password\"\n                as={\n                  <TextField\n                    type=\"password\"\n                    name=\"password\"\n                    label={locales.password}\n                    fullWidth\n                  />\n                }\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: true }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Controller\n                name=\"gender\"\n                as={\n                  <FormControl component=\"fieldset\" fullWidth>\n                    <FormLabel component=\"legend\">{locales.gender}</FormLabel>\n                    <RadioGroup aria-label=\"gender\" name=\"gender\">\n                      <FormControlLabel\n                        value=\"female\"\n                        label={locales.female}\n                        control={<Radio />}\n                      />\n                      <FormControlLabel\n                        value=\"male\"\n                        label={locales.male}\n                        control={<Radio />}\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                }\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: true }}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color=\"secondary\" variant=\"outlined\">\n            {locales.cancel}\n          </Button>\n          <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n            {locales.send}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default RegisterDialog;\n","/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport axios from 'axios';\nimport serverUrl from './utils/server-url';\nimport { raiseAlert } from '../reducers/alerts.reducer';\n\nexport default (data) => async (dispatch) => {\n  await axios({\n    method: 'POST',\n    url: `${serverUrl}/users/`,\n    data,\n  })\n    .then(() => {\n      if (Object.prototype.hasOwnProperty.call(data, 'is_admin')) {\n        dispatch(\n          raiseAlert({\n            message: 'New admin has been created',\n            variant: 'success',\n          }),\n        );\n      } else {\n        dispatch(\n          raiseAlert({\n            message: 'Request sent!',\n            variant: 'success',\n          }),\n        );\n      }\n    })\n    .catch((error) =>\n      dispatch(\n        raiseAlert({ message: error.response.data.error, variant: 'error' }),\n      ),\n    );\n};\n","/* eslint-disable react/jsx-wrap-multilines */\nimport React, { useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\n// eslint-disable-next-line object-curly-newline\nimport {\n  Button,\n  Container,\n  FormControl,\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Controller, useForm } from 'react-hook-form';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { loginThunk } from '../../store/thunks/auth.thunks';\nimport { openDialog } from '../../store/reducers/dialogs.reducer';\nimport RegisterDialog from './RegisterDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction Login() {\n  const { handleSubmit, control } = useForm();\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n  const authToken = useSelector((state) => state.auth.authToken);\n  const locales = useSelector((state) => state.locales.locale.login);\n\n  useEffect(() => {\n    if (authToken !== '') {\n      history.push('/');\n    }\n  }, [authToken]);\n\n  const onSubmit = (data) => {\n    dispatch(loginThunk(data));\n    history.push('/');\n  };\n\n  const handleRegisterClick = () => {\n    dispatch(openDialog());\n  };\n\n  return (\n    <Container className={classes.container} maxWidth=\"md\">\n      <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\n        <Grid\n          container\n          spacing={2}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: '100vh' }}\n        >\n          <Grid item>\n            <Grid container spacing={3} direction=\"column\" alignItems=\"center\">\n              <Grid item>\n                <FormControl>\n                  <Controller\n                    name=\"email\"\n                    as={\n                      <TextField\n                        variant=\"outlined\"\n                        name=\"email\"\n                        label=\"Email\"\n                      />\n                    }\n                    control={control}\n                    defaultValue=\"\"\n                    rules={{\n                      required: true,\n                      min: 6,\n                      max: 1024,\n                    }}\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item>\n                <FormControl>\n                  <Controller\n                    name=\"password\"\n                    as={\n                      <TextField\n                        label={locales.password}\n                        name=\"password\"\n                        type=\"password\"\n                        variant=\"outlined\"\n                      />\n                    }\n                    control={control}\n                    defaultValue=\"\"\n                    rules={{\n                      required: true,\n                      min: 6,\n                      max: 1024,\n                    }}\n                  />\n                </FormControl>\n              </Grid>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n                    {locales.logIn}\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    onClick={handleRegisterClick}\n                  >\n                    {locales.requestAccess}\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </form>\n      <RegisterDialog />\n    </Container>\n  );\n}\n\nexport default Login;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-undef */\nimport axios from 'axios';\nimport serverUrl from './utils/server-url';\nimport { raiseAlert } from '../reducers/alerts.reducer';\nimport { logOut, setAuthToken, setData } from '../reducers/auth-token.reducer';\n\nexport const loginThunk = (data) => async (dispatch) => {\n  await axios({\n    method: 'POST',\n    url: `${serverUrl}/login/`,\n    data,\n  })\n    .then((response) => {\n      const payload = response.data.token;\n      dispatch(setAuthToken(payload));\n\n      dispatch(\n        setData({ _id: response.data._id, is_admin: response.data.is_admin }),\n      );\n    })\n    .catch((err) => {\n      dispatch(\n        raiseAlert({ variant: 'error', message: err.response.data.error }),\n      );\n    });\n};\n\nexport const logoutThunk = () => (dispatch) => {\n  localStorage.removeItem('AUTH_TOKEN');\n  dispatch(logOut());\n};\n","/* eslint-disable import/no-cycle */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-underscore-dangle */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport serverUrl from './utils/server-url';\nimport { raiseAlert } from '../reducers/alerts.reducer';\nimport {\n  deleteElection,\n  editElection,\n  fetchElections,\n  saveElection,\n} from '../reducers/elections.reducer';\n\nexport const fetchElectionsThunk = () => async (dispatch) => {\n  await axios\n    .get(`${serverUrl}/elections/`)\n    .then((response) => dispatch(fetchElections(response.data)));\n};\n\nexport const saveElectionThunk = (data) => async (dispatch) => {\n  await axios({\n    method: 'POST',\n    url: `${serverUrl}/elections`,\n    data,\n  })\n    .then((response) => {\n      dispatch(saveElection(response.data));\n    })\n    .catch((err) => {\n      dispatch(\n        raiseAlert({ variant: 'error', message: err.response.data.error }),\n      );\n    });\n};\n\nexport const editElectionThunk = (data) => async (dispatch) => {\n  await axios({\n    method: 'PATCH',\n    url: `${serverUrl}/elections/${data._id}`,\n    data,\n  })\n    .then(() => dispatch(editElection(data)))\n    .catch((err) => {\n      dispatch(\n        raiseAlert({ variant: 'error', message: err.response.data.error }),\n      );\n    });\n};\n\nexport const deleteElectionThunk = (id) => async (dispatch) => {\n  await axios({\n    method: 'DELETE',\n    url: `${serverUrl}/elections/${id}`,\n  })\n    .then(() => dispatch(deleteElection(id)))\n    .catch((err) => {\n      dispatch(\n        raiseAlert({ variant: 'error', message: err.response.data.error }),\n      );\n    });\n};\n\nexport const vote = createAsyncThunk(\n  'elections/voteStatus',\n  async (data, thunkAPI) => {\n    const res = await axios\n      .patch(`${serverUrl}/elections/vote/${data.electionId}`, {\n        userId: data.userId,\n        candidateId: data.candidateId,\n      })\n      .then((response) => {\n        thunkAPI.dispatch(\n          raiseAlert({ message: 'Ballot stored!', variant: 'success' }),\n        );\n        return response;\n      })\n      .catch((err) =>\n        thunkAPI.dispatch(\n          raiseAlert({ message: err.response.data.error, variant: 'error' }),\n        ),\n      );\n    return res;\n  },\n);\n\nexport const endElection = createAsyncThunk(\n  'elections/endElectionStatus',\n  async (electionId, thunkAPI) => {\n    const res = await axios\n      .patch(`${serverUrl}/elections/end/${electionId}`)\n      .then((response) => {\n        thunkAPI.dispatch(\n          raiseAlert({\n            message: 'The election has ended successfully',\n            variant: 'success',\n          }),\n        );\n        return response;\n      })\n      .catch((err) => {\n        thunkAPI.dispatch(\n          raiseAlert({ message: err.response.data.error, variant: 'error' }),\n        );\n      });\n    return res;\n  },\n);\n","/* eslint-disable import/no-cycle */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-underscore-dangle */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { editElection as edit } from './utils/reducer.utils';\nimport { endElection, vote } from '../thunks/election.thunks';\n\nconst initialState = {\n  elections: [],\n  currentElection: {},\n  selectedCandidates: [],\n};\n\nconst electionSlice = createSlice({\n  name: 'elections',\n  initialState,\n  reducers: {\n    fetchElections(state, action) {\n      state.elections = action.payload;\n    },\n    saveElection(state, action) {\n      state.elections.push(action.payload);\n    },\n    setCurrentElection(state, action) {\n      state.currentElection = state.elections.filter(\n        (election) => election._id === action.payload,\n      )[0];\n    },\n    emptyCurrentElection(state) {\n      state.currentElection = {};\n    },\n    deleteElection(state, action) {\n      state.elections = state.elections.filter(\n        (election) => election._id !== action.payload,\n      );\n      state.currentElection = {};\n    },\n    editElection(state, action) {\n      state.elections = edit(state.elections, action.payload);\n      state.currentElection = action.payload;\n    },\n    setCandidates(state, action) {\n      state.selectedCandidates = action.payload;\n    },\n  },\n  extraReducers: {\n    [vote.fulfilled]: (state, action) => {\n      const votedCandidate = state.currentElection.candidates.filter(\n        (candidate) => candidate._id === action.payload.candidateId,\n      );\n\n      votedCandidate.votes += 1;\n\n      state.currentElection.candidates.filter(\n        (candidate) => candidate._id !== action.payload.candidateId,\n      );\n\n      state.currentElection.candidates.push(votedCandidate);\n\n      state.currentElection.registeredVotes.push(action.payload.userId);\n\n      state.elections.filter(\n        (election) => election._id !== state.currentElection._id,\n      );\n\n      state.elections.push(state.currentElection);\n    },\n    [endElection.fulfilled]: (state) => {\n      state.currentElection.status = 'finished';\n\n      state.elections.filter(\n        (election) => election._id !== state.currentElection._id,\n      );\n\n      state.elections.push(state.currentElection);\n    },\n  },\n});\n\nexport const {\n  deleteElection,\n  editElection,\n  emptyCurrentElection,\n  fetchElections,\n  saveElection,\n  setCurrentElection,\n  setCandidates,\n} = electionSlice.actions;\nexport default electionSlice.reducer;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-underscore-dangle */\nexport const getElection = (elections, _id) =>\n  elections.filter((election) => election._id !== _id);\n\nexport const deleteOne = (elections, _id) =>\n  elections.filter((election) => election._id !== _id);\n\nexport const editElection = (elections, data) => {\n  const electionsWithoutTarget = deleteOne(elections, data._id);\n\n  const targetElection = { ...data };\n\n  return [...electionsWithoutTarget, targetElection];\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  open: false,\n};\n\nconst panelSlice = createSlice({\n  name: 'panel',\n  initialState,\n  reducers: {\n    openPanel(state) {\n      state.open = true;\n    },\n    closePanel(state) {\n      state.open = false;\n    },\n  },\n});\n\nexport const { closePanel, openPanel } = panelSlice.actions;\nexport default panelSlice.reducer;\n","import React from 'react';\nimport {\n  Toolbar,\n  AppBar,\n  Typography,\n  IconButton,\n  makeStyles,\n  Tooltip,\n} from '@material-ui/core';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport BackIcon from '@material-ui/icons/ArrowBack';\nimport PropTypes from 'prop-types';\nimport { logoutThunk } from '../store/thunks/auth.thunks';\nimport { emptyCurrentElection } from '../store/reducers/elections.reducer';\nimport { openPanel } from '../store/reducers/panel.reducer';\n\nconst useStyles = makeStyles(() => ({\n  navbarRightButtons: {\n    marginLeft: 'auto',\n  },\n  navbar: {\n    marginBottom: 20,\n  },\n}));\n\nconst Navbar = ({ actionIcon, path }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleLogout = () => {\n    dispatch(logoutThunk());\n    history.push('/login');\n  };\n\n  const handleOnClick = () => {\n    if (actionIcon === 'back') {\n      dispatch(emptyCurrentElection());\n      history.push(path.from);\n    } else {\n      history.push('/');\n    }\n  };\n\n  const openPanelHandler = () => {\n    dispatch(openPanel());\n  };\n\n  return (\n    <div className=\"appbar-wrapper\">\n      <AppBar position=\"static\" className={classes.navbar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={handleOnClick}>\n            {actionIcon === 'back' ? <BackIcon /> : <HowToVoteIcon />}\n          </IconButton>\n          <Typography variant=\"h5\">Voteapp</Typography>\n          <div className={classes.navbarRightButtons}>\n            <Tooltip title=\"Admin Panel\">\n              <IconButton color=\"inherit\" onClick={openPanelHandler}>\n                <SettingsIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Logout\">\n              <IconButton color=\"inherit\" onClick={handleLogout}>\n                <ExitToAppIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nNavbar.defaultProps = {\n  actionIcon: 'home',\n  path: { from: '' },\n};\n\nNavbar.propTypes = {\n  actionIcon: PropTypes.string,\n  path: PropTypes.shape({\n    from: PropTypes.string,\n  }),\n};\n\nexport default Navbar;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Chip, TextField } from '@material-ui/core';\nimport { setCandidates } from '../../store/reducers/elections.reducer';\n\nconst UserSelector = () => {\n  const users = useSelector((state) => state.users.users);\n  const dispatch = useDispatch();\n  const locales = useSelector((state) => state.locales.locale.userSelector);\n\n  return (\n    <Autocomplete\n      multiple\n      options={users}\n      getOptionLabel={(option) => option.name}\n      onChange={(event, value) => dispatch(setCandidates(value))}\n      renderTags={(value, getTagProps) =>\n        value.map((option, index) => (\n          <Chip\n            variant=\"default\"\n            label={option.name}\n            {...getTagProps({ index })}\n          />\n        ))\n      }\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          variant=\"outlined\"\n          placeholder={locales.placeholder}\n        />\n      )}\n    />\n  );\n};\n\nexport default UserSelector;\n","/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-unused-vars */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport serverUrl from './utils/server-url';\nimport { raiseAlert } from '../reducers/alerts.reducer';\n\nconst fetchUsers = createAsyncThunk(\n  'users/fetchUsersStatus',\n  async (thunkAPI) => {\n    const res = axios\n      .get(`${serverUrl}/users/`)\n      .then((response) => response.data)\n      .catch((err) =>\n        thunkAPI.dispatch(\n          raiseAlert({ message: err.response.data.error, variant: 'error' }),\n        ),\n      );\n    return res;\n  },\n);\n\nexport default fetchUsers;\n","/* eslint-disable react/jsx-wrap-multilines */\nimport React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  Grid,\n  Switch,\n  TextField,\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Controller, useForm } from 'react-hook-form';\nimport { closeDialog } from '../../store/reducers/dialogs.reducer';\nimport { saveElectionThunk } from '../../store/thunks/election.thunks';\nimport UserSelector from './UserSelector';\nimport fetchUsers from '../../store/thunks/user.thunks';\n\nconst CreateElectionDialog = () => {\n  const { handleSubmit, control } = useForm();\n  const [isChecked] = useState(true);\n  const dispatch = useDispatch();\n  const isOpen = useSelector((state) => state.dialog.isOpen);\n  const locales = useSelector(\n    (state) => state.locales.locale.createElectionDialog,\n  );\n  const selectedCandidates = useSelector(\n    (state) => state.election.selectedCandidates,\n  );\n\n  const handleClose = () => dispatch(closeDialog());\n  const onSubmit = (data) => {\n    dispatch(saveElectionThunk({ ...data, candidates: selectedCandidates }));\n    handleClose();\n  };\n\n  useEffect(() => dispatch(fetchUsers()), []);\n\n  return (\n    <Dialog open={isOpen} onClose={handleClose} fullWidth maxWidth=\"xs\">\n      <DialogTitle>{locales.createElection}</DialogTitle>\n      <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\n        <DialogContent>\n          <Grid container direction=\"column\">\n            <Grid item>\n              <Controller\n                name=\"title\"\n                as={\n                  <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"election-title\"\n                    label={locales.title}\n                    type=\"text\"\n                    fullWidth\n                    variant=\"filled\"\n                    name=\"title\"\n                  />\n                }\n                control={control}\n                defaultValue=\"\"\n                rules={{\n                  required: true,\n                  min: 6,\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <Controller\n                name=\"position\"\n                as={\n                  <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"election-position\"\n                    label={locales.position}\n                    type=\"text\"\n                    fullWidth\n                    variant=\"filled\"\n                    name=\"position\"\n                  />\n                }\n                control={control}\n                defaultValue=\"\"\n                rules={{\n                  required: true,\n                  min: 6,\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                disabled\n                control={<Switch checked={isChecked} />}\n                label={locales.selectCandidates}\n              />\n            </Grid>\n            {isChecked && (\n              <Grid item>\n                <UserSelector />\n              </Grid>\n            )}\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={handleClose}>\n            {locales.cancel}\n          </Button>\n          <Button color=\"primary\" type=\"submit\">\n            {locales.create}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default CreateElectionDialog;\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { setCurrentElection } from '../../store/reducers/elections.reducer';\n\nconst useStyles = makeStyles({\n  card: {\n    width: 275,\n  },\n  editButton: {\n    marginLeft: 'auto',\n  },\n});\n\nconst ElectionCard = ({ data }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const onClickHandler = () => {\n    dispatch(setCurrentElection(data._id));\n    history.push('/election');\n  };\n\n  return (\n    <Card className={classes.card} variant=\"outlined\" onClick={onClickHandler}>\n      <CardActionArea>\n        <CardContent>\n          <Typography variant=\"h5\">{data.title}</Typography>\n          <Typography>{data.position}</Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nElectionCard.propTypes = {\n  data: PropTypes.shape({\n    _id: PropTypes.string,\n    title: PropTypes.string,\n    position: PropTypes.string,\n  }).isRequired,\n};\n\nexport default ElectionCard;\n","import React from 'react';\nimport { Fab, makeStyles } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useDispatch } from 'react-redux';\nimport { openDialog } from '../store/reducers/dialogs.reducer';\n\nconst useStyles = makeStyles(() => ({\n  fab: {\n    margin: 0,\n    top: 'auto',\n    right: 20,\n    bottom: 20,\n    left: 'auto',\n    position: 'fixed',\n  },\n}));\n\nconst FabButton = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"fab-wrapper\">\n      <Fab\n        color=\"secondary\"\n        aria-label=\"add\"\n        className={classes.fab}\n        onClick={() => dispatch(openDialog())}\n      >\n        <AddIcon />\n      </Fab>\n    </div>\n  );\n};\n\nexport default FabButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\n\nconst Blob = ({ text }) => (\n  <div\n    style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n  >\n    <Typography\n      variant=\"h4\"\n      color=\"secondary\"\n      style={{\n        position: 'absolute',\n        margin: '0 auto',\n        alignSelf: 'center',\n        justifySelf: 'center',\n      }}\n    >\n      {text}\n    </Typography>\n    <svg\n      viewBox=\"0 0 200 200\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"500px\"\n      height=\"400px\"\n      style={{}}\n    >\n      <path\n        fill=\"#8CB3FF\"\n        d=\"M26.8,-48.5C38.8,-39.6,55.2,-40.5,66.5,-34C77.8,-27.6,84,-13.8,83.2,-0.5C82.3,12.8,74.5,25.6,66.5,37.9C58.5,50.1,50.5,61.8,39.4,67.7C28.3,73.6,14.1,73.8,1.5,71.2C-11.1,68.6,-22.3,63.3,-33.1,57.2C-43.8,51.1,-54.3,44.2,-58.2,34.5C-62.1,24.9,-59.5,12.4,-56.8,1.6C-54,-9.3,-51.2,-18.6,-48,-29.6C-44.9,-40.7,-41.6,-53.4,-33.5,-64.6C-25.5,-75.8,-12.7,-85.4,-2.6,-80.8C7.4,-76.2,14.9,-57.5,26.8,-48.5Z\"\n        transform=\"translate(100 100)\"\n      />\n    </svg>\n  </div>\n);\n\nBlob.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Blob;\n","/* eslint-disable no-underscore-dangle */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport shortid from 'shortid';\nimport { Grid } from '@material-ui/core';\nimport Navbar from '../Navbar';\nimport CreateElectionDialog from './CreateElectionDialog';\nimport ElectionCard from './ElectionCard';\nimport FabButton from '../FabButton';\nimport { fetchElectionsThunk } from '../../store/thunks/election.thunks';\nimport { raiseAlert } from '../../store/reducers/alerts.reducer';\nimport Blob from '../Blob';\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n\n  useEffect(async () => {\n    try {\n      dispatch(fetchElectionsThunk());\n    } catch (err) {\n      dispatch(raiseAlert({ variant: 'error', message: err }));\n    }\n  }, []);\n\n  const elections = useSelector((state) => state.election.elections);\n  const isAdmin = useSelector((state) => state.auth.isAdmin);\n  const locale = useSelector((state) => state.locales.locale.dashboard);\n\n  return (\n    <div className=\"dashboard-wrapper\">\n      {isAdmin && <FabButton />}\n      <Navbar />\n      <CreateElectionDialog />\n      {elections.length === 0 && <Blob text={locale.blob} />}\n      <Grid\n        container\n        spacing={2}\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ margin: 0 }}\n        xs={12}\n      >\n        {elections.map((election) => (\n          <Grid item key={shortid.generate()}>\n            <ElectionCard\n              data={{\n                _id: election._id,\n                title: election.title,\n                position: election.position,\n              }}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\n\n// eslint-disable-next-line react/prop-types\nconst AuthRoute = ({ children, ...rest }) => {\n  const authToken = useSelector((state) => state.auth.authToken);\n\n  return (\n    <Route\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n      render={() => (authToken !== '' ? children : <Redirect to=\"/login\" />)}\n    />\n  );\n};\n\nexport default AuthRoute;\n","/* eslint-disable no-underscore-dangle */\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { closeDialog } from '../../store/reducers/dialogs.reducer';\nimport { deleteElectionThunk } from '../../store/thunks/election.thunks';\nimport { raiseAlert } from '../../store/reducers/alerts.reducer';\n\nconst DeleteElectionWarning = ({ open, setIsWarningOpen }) => {\n  const dispatch = useDispatch();\n  const id = useSelector((state) => state.election.currentElection._id);\n  const locales = useSelector(\n    (state) => state.locales.locale.deleteElectionWarning,\n  );\n  const history = useHistory();\n\n  const handleClick = () => {\n    try {\n      dispatch(deleteElectionThunk(id));\n      setIsWarningOpen(false);\n      dispatch(closeDialog());\n      history.push('/');\n    } catch (err) {\n      dispatch(raiseAlert({ variant: 'error', message: err }));\n    }\n  };\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>{locales.dialogTitle}</DialogTitle>\n      <DialogContent>{locales.dialogContent}</DialogContent>\n      <DialogActions>\n        <Button onClick={() => setIsWarningOpen(false)} color=\"secondary\">\n          {locales.cancel}\n        </Button>\n        <Button onClick={handleClick}>{locales.continue}</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nDeleteElectionWarning.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setIsWarningOpen: PropTypes.func.isRequired,\n};\n\nexport default DeleteElectionWarning;\n","/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable no-underscore-dangle */\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  TextField,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Controller, useForm } from 'react-hook-form';\nimport { closeDialog } from '../../store/reducers/dialogs.reducer';\nimport { editElectionThunk } from '../../store/thunks/election.thunks';\nimport DeleteElectionWarning from './DeleteElectionWarning';\nimport { raiseAlert } from '../../store/reducers/alerts.reducer';\n\nconst ElectionSettings = () => {\n  const { handleSubmit, control } = useForm();\n  const [isWarningOpen, setIsWarningOpen] = useState(false);\n  const isOpen = useSelector((state) => state.dialog.isOpen);\n  const locales = useSelector((state) => state.locales.locale.electionSettings);\n  const currentElection = useSelector(\n    (state) => state.election.currentElection,\n  );\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    try {\n      dispatch(editElectionThunk({ ...currentElection, ...data }));\n      dispatch(closeDialog());\n    } catch (err) {\n      dispatch(raiseAlert({ variant: 'error', message: err }));\n    }\n  };\n\n  return (\n    <div className=\"election-settings-wrapper\">\n      <DeleteElectionWarning\n        open={isWarningOpen}\n        setIsWarningOpen={setIsWarningOpen}\n      />\n      <Dialog open={isOpen} fullWidth maxWidth=\"xs\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogTitle>{locales.dialogTitle}</DialogTitle>\n          <DialogContent>\n            <Grid container direction=\"column\">\n              <Grid item>\n                <Controller\n                  name=\"title\"\n                  as={\n                    <TextField\n                      margin=\"dense\"\n                      label={locales.title}\n                      type=\"text\"\n                      fullWidth\n                      variant=\"filled\"\n                      name=\"title\"\n                    />\n                  }\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: true,\n                    min: 6,\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <Controller\n                  name=\"position\"\n                  as={\n                    <TextField\n                      margin=\"dense\"\n                      label={locales.position}\n                      type=\"text\"\n                      fullWidth\n                      variant=\"filled\"\n                      name=\"position\"\n                    />\n                  }\n                  rules={{\n                    required: true,\n                    min: 6,\n                  }}\n                  defaultValue=\"\"\n                  control={control}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                <IconButton onClick={() => setIsWarningOpen(true)}>\n                  <DeleteIcon />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <div>\n                  <Button\n                    color=\"primary\"\n                    onClick={() => dispatch(closeDialog())}\n                  >\n                    {locales.cancel}\n                  </Button>\n                  <Button color=\"primary\" type=\"submit\">\n                    {locales.accept}\n                  </Button>\n                </div>\n              </Grid>\n            </Grid>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ElectionSettings;\n","export default (data) => {\n  const votes = data.map((candidates) => candidates.votes);\n  const names = data.map((candidates) => candidates.name);\n\n  return {\n    labels: names,\n    datasets: [\n      {\n        label: 'Number of votes',\n        data: votes,\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Bar } from '@reactchartjs/react-chart.js';\nimport parseData from './utils/parse-data';\n\nconst WinnerChart = () => {\n  const candidates = useSelector(\n    (state) => state.election.currentElection.candidates,\n  );\n\n  return (\n    <Bar\n      data={parseData(candidates)}\n      height={400}\n      width={75}\n      options={{ maintainAspectRatio: false }}\n    />\n  );\n};\n\nexport default WinnerChart;\n","/* eslint-disable operator-linebreak */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable indent */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable object-curly-newline */\nimport {\n  Button,\n  Container,\n  IconButton,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport FabButton from '../FabButton';\nimport NavBar from '../Navbar';\nimport { openDialog } from '../../store/reducers/dialogs.reducer';\nimport ElectionSettings from './ElectionSettings';\nimport { endElection } from '../../store/thunks/election.thunks';\nimport WinnerChart from './WinnerChart';\nimport { raiseAlert } from '../../store/reducers/alerts.reducer';\nimport Blob from '../Blob';\n\nconst useStyles = makeStyles(() => ({\n  electionWrapper: {\n    height: '100vh',\n  },\n  banner: {\n    margin: 0,\n  },\n  banner__title: {\n    marginTop: 25,\n    marginBottom: 10,\n  },\n  banner__position: {\n    marginBottom: 25,\n  },\n}));\n\nconst ElectionDashboard = () => {\n  const currentElection = useSelector(\n    (state) => state.election.currentElection,\n  );\n  const auth = useSelector((state) => state.auth);\n  const locales = useSelector(\n    (state) => state.locales.locale.electionDashboard,\n  );\n  const hasUserVoted =\n    currentElection.registeredVotes.filter((vote) => vote === auth._id)\n      .length === 1;\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (Object.keys(currentElection).length === 0) history.push('/');\n  });\n\n  const onButtonClick = () => {\n    if (!auth.isAdmin) {\n      history.push('/vote');\n    } else if (hasUserVoted) {\n      dispatch(\n        raiseAlert({ message: locales.raiseAlertMessage, variant: 'warning' }),\n      );\n    } else {\n      dispatch(endElection(currentElection._id));\n    }\n  };\n\n  return (\n    <div className={classes.electionWrapper}>\n      <NavBar actionIcon=\"back\" path={{ from: '/' }} />\n      <ElectionSettings />\n      {auth.isAdmin && <FabButton />}\n      <Container maxWidth=\"md\" className={classes.banner}>\n        <Typography variant=\"h4\" className={classes.banner__title}>\n          {currentElection.title}\n        </Typography>\n        <Typography variant=\"h5\" className={classes.banner__position}>\n          {currentElection.position}\n        </Typography>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={onButtonClick}\n          disabled={currentElection.status === 'finished' || hasUserVoted}\n        >\n          {currentElection.status === 'finished'\n            ? locales.electionEnded\n            : !auth.isAdmin\n            ? hasUserVoted\n              ? locales.userVoted\n              : locales.voteNow\n            : locales.endElection}\n        </Button>\n        {auth.isAdmin && (\n          <IconButton onClick={() => dispatch(openDialog())}>\n            <SettingsIcon />\n          </IconButton>\n        )}\n      </Container>\n      <div className=\"winner-graph\">\n        {currentElection.status === 'finished' ? (\n          <WinnerChart />\n        ) : (\n          <Blob text={locales.blob} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ElectionDashboard;\n","import { Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeAlert } from '../store/reducers/alerts.reducer';\n\nconst AlertMessage = () => {\n  const { open, message, variant } = useSelector((state) => state.alert);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    dispatch(closeAlert());\n  };\n\n  return (\n    <Snackbar autoHideDuration={6000} open={open} onClose={handleClose}>\n      <Alert\n        elevation={6}\n        variant=\"filled\"\n        severity={variant}\n        onClose={handleClose}\n      >\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default AlertMessage;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  unverifiedUsers: [],\n};\n\nconst unverifiedUsersSlice = createSlice({\n  name: 'unverified',\n  initialState,\n  reducers: {\n    fetchUnverifiedUsers(state, action) {\n      state.unverifiedUsers = action.payload;\n    },\n    verifyUser(state, action) {\n      state.unverifiedUsers = state.unverifiedUsers.filter(\n        (user) => user._id !== action.payload,\n      );\n    },\n    denyUser(state, action) {\n      state.unverifiedUsers = state.unverifiedUsers.filter(\n        (user) => user._id !== action.payload,\n      );\n    },\n  },\n});\n\nexport const {\n  denyUser,\n  fetchUnverifiedUsers,\n  verifyUser,\n} = unverifiedUsersSlice.actions;\nexport default unverifiedUsersSlice.reducer;\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Accordion,\n  AccordionActions,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { useDispatch } from 'react-redux';\nimport {\n  denyUserThunk,\n  verifyUserThunk,\n} from '../../store/thunks/verify.thunks';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  summary: {\n    backgroundColor: '#d5d5d5',\n  },\n  summaryText: {\n    margin: theme.spacing(1),\n  },\n  details: {\n    flexDirection: 'column',\n  },\n}));\n\nconst UnverifiedUser = ({ data }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleAccept = () => {\n    dispatch(verifyUserThunk(data._id));\n  };\n\n  const handleDeny = () => {\n    dispatch(denyUserThunk(data._id));\n  };\n\n  return (\n    <Accordion className={classes.root}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        className={classes.summary}\n      >\n        <Typography variant=\"h5\">{data.name}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.details}>\n        <Typography gutterBottom>\n          Code:\n          {data.code}\n        </Typography>\n        <br />\n        <Typography gutterBottom>\n          Email:\n          {data.email}\n        </Typography>\n        <br />\n        <Typography>\n          Gender:\n          {data.gender}\n        </Typography>\n      </AccordionDetails>\n      <AccordionActions>\n        <Button color=\"secondary\" variant=\"outlined\" onClick={handleDeny}>\n          Deny\n        </Button>\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleAccept}\n        >\n          Accept\n        </Button>\n      </AccordionActions>\n    </Accordion>\n  );\n};\n\nUnverifiedUser.propTypes = {\n  data: PropTypes.shape({\n    _id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default UnverifiedUser;\n","/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport axios from 'axios';\nimport serverUrl from './utils/server-url';\nimport { raiseAlert } from '../reducers/alerts.reducer';\nimport {\n  denyUser,\n  fetchUnverifiedUsers,\n  verifyUser,\n} from '../reducers/unverified-users.reducer';\n\nexport const fetchUnverifiedUsersThunk = () => async (dispatch) => {\n  await axios({\n    method: 'GET',\n    url: `${serverUrl}/users/unverified`,\n  })\n    .then((response) => {\n      const { data } = response;\n      dispatch(fetchUnverifiedUsers(data));\n    })\n    .catch((error) =>\n      dispatch(\n        raiseAlert({\n          message: error.response.data.error,\n          variant: 'error',\n        }),\n      ),\n    );\n};\n\nexport const verifyUserThunk = (id) => async (dispatch) => {\n  await axios({\n    method: 'PATCH',\n    url: `${serverUrl}/users/verify/${id}`,\n  })\n    .then((response) => {\n      const { data } = response;\n      dispatch(verifyUser(id));\n\n      raiseAlert({\n        message: data.message,\n        variant: 'success',\n      });\n    })\n    .catch((error) => {\n      dispatch(\n        raiseAlert({\n          message: error.response.data.error,\n          variant: 'error',\n        }),\n      );\n    });\n};\n\nexport const denyUserThunk = (id) => async (dispatch) => {\n  await axios({\n    method: 'DELETE',\n    url: `${serverUrl}/users/deny/${id}`,\n  })\n    .then((response) => {\n      const { data } = response;\n      dispatch(denyUser(id));\n\n      raiseAlert({\n        message: data.message,\n        variant: 'success',\n      });\n    })\n    .catch((error) => {\n      dispatch(\n        raiseAlert({\n          message: error.response.data.error,\n          variant: 'error',\n        }),\n      );\n    });\n};\n","import { Dialog, DialogContent } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { generate } from 'shortid';\nimport UnverifiedUser from './UnverifiedUser';\nimport { fetchUnverifiedUsersThunk } from '../../store/thunks/verify.thunks';\n\nconst VerifyUsersDialog = ({ isOpen, onClose, unverifiedUsers }) => {\n  const dispatch = useDispatch();\n\n  if (unverifiedUsers.length === 0) {\n    onClose();\n  }\n\n  useEffect(() => {\n    dispatch(fetchUnverifiedUsersThunk());\n  }, []);\n\n  return (\n    <Dialog open={isOpen} onClose={onClose} fullWidth>\n      <DialogContent>\n        {unverifiedUsers.map((user) => (\n          <UnverifiedUser data={user} key={generate()} />\n        ))}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nVerifyUsersDialog.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  unverifiedUsers: PropTypes.arrayOf(\n    PropTypes.shape({\n      gender: PropTypes.string,\n      _id: PropTypes.string,\n      name: PropTypes.string,\n      email: PropTypes.string,\n      code: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default VerifyUsersDialog;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport en from '../../locales/en';\nimport es from '../../locales/es';\n\nconst initialState = {\n  language: 'en',\n  locale: en(),\n};\n\nconst locales = createSlice({\n  name: 'locales',\n  initialState,\n  reducers: {\n    setLocale(state, action) {\n      state.language = action.payload;\n      if (state.language === 'en') {\n        state.locale = en();\n      } else {\n        state.locale = es();\n      }\n    },\n  },\n});\n\nexport const { setLocale } = locales.actions;\nexport default locales.reducer;\n","export default () => ({\n  login: {\n    password: 'Password',\n    logIn: 'Log In',\n    requestAccess: 'Request access',\n  },\n  registerDialog: {\n    dialogTitle: 'Fill request',\n    yourName: 'Your Name',\n    code: 'Code',\n    password: 'Password',\n    gender: 'Gender',\n    male: 'Male',\n    female: 'Female',\n    cancel: 'Cancel',\n    send: 'Send',\n  },\n  dashboard: {\n    blob: 'There are no elections yet',\n  },\n  createElectionDialog: {\n    createElection: 'Create election',\n    title: 'Title',\n    position: 'Position',\n    selectCandidates: 'Select Candidates Beforehand',\n    cancel: 'Cancel',\n    create: 'Create',\n  },\n  userSelector: {\n    placeholder: 'Select the candidates',\n  },\n  adminPanel: {\n    verifyUsers: 'Verify Users',\n  },\n  candidateCard: {\n    cardTitle: 'Candidate',\n  },\n  deleteElectionWarning: {\n    dialogTitle: 'Are you sure you want to delete this?',\n    dialogContent: \"This can't be undone\",\n    cancel: 'Cancel',\n    continue: 'Continue',\n  },\n  electionDashboard: {\n    blob: 'You can vote now!',\n    raiseAlertMessage: 'You already voted!',\n    electionEnded: 'The election has ended',\n    userVoted: 'You already voted',\n    voteNow: 'Vote now!',\n    endElection: 'End Election',\n  },\n  electionSettings: {\n    dialogTitle: 'Election settings',\n    title: 'Title',\n    position: 'Position',\n    cancel: 'Cancel',\n    accept: 'Accept',\n  },\n});\n","export default () => ({\n  login: {\n    password: 'Contraseña',\n    logIn: 'Ingresar',\n    requestAccess: 'Solicitar acceso',\n  },\n  registerDialog: {\n    dialogTitle: 'Llena la solicitud',\n    yourName: 'Tu nombre',\n    code: 'Código',\n    password: 'Contraseña',\n    gender: 'Género',\n    male: 'Hombre',\n    female: 'Mujer',\n    cancel: 'Cancelar',\n    send: 'Enviar',\n  },\n  dashboard: {\n    blob: 'No hay elecciones.',\n  },\n  createElectionDialog: {\n    createElection: 'Crear elección',\n    title: 'Titulo',\n    position: 'Posición',\n    selectCandidates: 'Seleccionar candidatos de antemano',\n    cancel: 'Cancelar',\n    create: 'Crear',\n  },\n  userSelector: {\n    placeholder: 'Selecciona los candidatos',\n  },\n  adminPanel: {\n    verifyUsers: 'Verificar usuarios',\n  },\n  candidateCard: {\n    cardTitle: 'Candidato',\n  },\n  deleteElectionWarning: {\n    dialogTitle: 'Está seguro que quiere eliminar esta elección?',\n    dialogContent: 'Esto no puede deshacerse',\n    cancel: 'Cancelar',\n    continue: 'Continuar',\n  },\n  electionDashboard: {\n    blob: 'Puede votar ahora!',\n    raiseAlertMessage: 'Ya has votado!',\n    electionEnded: 'La elección ha terminado',\n    userVoted: 'Ya has votado!',\n    voteNow: 'Vota ahora!',\n    endElection: 'Terminar elección',\n  },\n  electionSettings: {\n    dialogTitle: 'Ajustes de elección',\n    title: 'Título',\n    position: 'Posición',\n    cancel: 'Cancelar',\n    accept: 'Aceptar',\n  },\n});\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport { InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLocale } from '../../store/reducers/locales.reducer';\n\nconst LocaleSelect = () => {\n  const dispatch = useDispatch();\n  const currentLanguage = useSelector((state) => state.locales.language);\n  const onChangeHandler = (e) => {\n    dispatch(setLocale(e.target.value));\n  };\n  return (\n    <FormControl style={{ padding: 10 }}>\n      <InputLabel>Language</InputLabel>\n      <Select onChange={onChangeHandler} defaultValue={currentLanguage}>\n        <MenuItem value=\"en\">English</MenuItem>\n        <MenuItem value=\"es\">Español</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default LocaleSelect;\n","import {\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport AddUser from '@material-ui/icons/GroupAdd';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport PropTypes from 'prop-types';\nimport { raiseAlert } from '../../store/reducers/alerts.reducer';\nimport { closePanel } from '../../store/reducers/panel.reducer';\nimport VerifyUsersDialog from './VerifyUsersDialog';\nimport LocaleSelect from './LocaleSelect';\n\nconst VerifyUsersButton = ({ handleAddUserClick, itemText }) => (\n  <ListItem button onClick={handleAddUserClick}>\n    <ListItemIcon>\n      <AddUser />\n    </ListItemIcon>\n    <ListItemText primary={itemText} />\n  </ListItem>\n);\n\nconst AdminPanel = () => {\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const dispatch = useDispatch();\n  const open = useSelector((state) => state.panel.open);\n  const locales = useSelector((state) => state.locales.locale.adminPanel);\n  const isAdmin = useSelector((state) => state.auth.isAdmin);\n  const unverifiedUsers = useSelector(\n    (state) => state.unverified.unverifiedUsers,\n  );\n\n  const handleAddUserClick = () => {\n    if (unverifiedUsers.length === 0) {\n      dispatch(\n        raiseAlert({\n          message: 'There are no users left to check',\n          variant: 'warning',\n        }),\n      );\n    } else {\n      setOpenDialog(true);\n    }\n  };\n\n  return (\n    <>\n      <Drawer open={open} anchor=\"right\" onClose={() => dispatch(closePanel())}>\n        <List>\n          {isAdmin && (\n            <VerifyUsersButton\n              handleAddUserClick={handleAddUserClick}\n              itemText={locales.verifyUsers}\n            />\n          )}\n          <ListItem>\n            <ListItemIcon>\n              <LanguageIcon />\n            </ListItemIcon>\n            <LocaleSelect />\n          </ListItem>\n        </List>\n      </Drawer>\n      <VerifyUsersDialog\n        isOpen={openDialog}\n        onClose={() => setOpenDialog(false)}\n        unverifiedUsers={unverifiedUsers}\n      />\n    </>\n  );\n};\n\nVerifyUsersButton.propTypes = {\n  handleAddUserClick: PropTypes.func.isRequired,\n  itemText: PropTypes.string.isRequired,\n};\n\nexport default AdminPanel;\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport VoteIcon from '@material-ui/icons/HowToVote';\nimport { useSelector } from 'react-redux';\n\nconst CandidateCard = ({ data, onClick }) => {\n  const locales = useSelector((state) => state.locales.locale.candidateCard);\n  return (\n    <Card style={{ maxWidth: 500, width: 250 }}>\n      <CardHeader\n        avatar={<Avatar>{data.name[0]}</Avatar>}\n        title={locales.candidateCard}\n      />\n      <CardContent>\n        <Typography>{data.name}</Typography>\n        <Typography>{data.code}</Typography>\n      </CardContent>\n      <CardActions\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <IconButton onClick={() => onClick(data._id)}>\n          <VoteIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n};\n\nCandidateCard.propTypes = {\n  data: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n  }).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default CandidateCard;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable operator-linebreak */\nimport { IconButton, makeStyles } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { generate } from 'shortid';\nimport BackIcon from '@material-ui/icons/ArrowBack';\nimport { useHistory } from 'react-router';\nimport CandidateCard from './CandidateCard';\nimport { vote } from '../../store/thunks/election.thunks';\n\nconst useStyles = makeStyles(() => ({\n  votingPanel: {\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n  },\n}));\n\nconst VotingPanel = () => {\n  const candidates =\n    useSelector((state) => state.election.currentElection.candidates) || [];\n  const electionId = useSelector((state) => state.election.currentElection._id);\n  const userId = useSelector((state) => state.auth._id);\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const onClick = (candidateId) => {\n    dispatch(vote({ electionId, userId, candidateId }));\n    history.push('/election');\n  };\n\n  const onBackClick = () => {\n    history.push('/election');\n  };\n\n  useEffect(() => {\n    if (candidates.length === 0) {\n      history.push('/');\n    }\n  });\n\n  return (\n    <>\n      <IconButton onClick={onBackClick}>\n        <BackIcon />\n      </IconButton>\n      <div className={classes.votingPanel}>\n        {candidates.map((candidate) => (\n          <CandidateCard data={candidate} onClick={onClick} key={generate()} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default VotingPanel;\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/jsx-filename-extension */\nimport './App.css';\nimport { Route, Switch } from 'react-router';\nimport { HashRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport Login from './components/login/Login';\nimport Dashboard from './components/dashboard/Dashboard';\nimport AuthRoute from './components/AuthRoute';\nimport ElectionDashboard from './components/election/ElectionDashboard';\nimport AlertMessage from './components/AlertMessage';\nimport AdminPanel from './components/admin-panel/AdminPanel';\nimport VotingPanel from './components/election/VotingPanel';\n\nconst useStyles = makeStyles({\n  app: {\n    height: '100vh',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.app}>\n      <AdminPanel />\n      <AlertMessage />\n      <HashRouter>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <AuthRoute path=\"/vote\">\n            <VotingPanel />\n          </AuthRoute>\n          <AuthRoute path=\"/election\">\n            <ElectionDashboard />\n          </AuthRoute>\n          <AuthRoute path=\"/\">\n            <Dashboard />\n          </AuthRoute>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport fetchUsers from '../thunks/user.thunks';\n\nconst initialState = {\n  users: [],\n};\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    setUser(state, action) {\n      state.users = action.payload;\n    },\n  },\n  extraReducers: {\n    [fetchUsers.fulfilled]: (state, action) => {\n      state.users = action.payload;\n    },\n  },\n});\n\nexport const { setUser } = usersSlice.actions;\nexport default usersSlice.reducer;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport auth from './auth-token.reducer';\nimport dialog from './dialogs.reducer';\nimport election from './elections.reducer';\nimport alert from './alerts.reducer';\nimport panel from './panel.reducer';\nimport unverified from './unverified-users.reducer';\nimport users from './users.reducer';\nimport locales from './locales.reducer';\n\nconst rootReducer = combineReducers({\n  auth,\n  dialog,\n  election,\n  alert,\n  panel,\n  unverified,\n  users,\n  locales,\n});\n\nexport default rootReducer;\n","/* eslint-disable no-undef */\n/* eslint-disable no-underscore-dangle */\nimport { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './reducers/reducer';\n\nexport default configureStore({\n  reducer: rootReducer,\n});\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable no-undef */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { config as dotenvConfig } from 'dotenv';\nimport App from './App';\nimport store from './store/store';\n\ndotenvConfig();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}