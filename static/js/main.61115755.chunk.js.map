{"version":3,"sources":["store/reducers/dialogs.reducer.js","store/thunks/utils/server-url.js","store/reducers/alerts.reducer.js","store/reducers/auth-token.reducer.js","locales/en.js","locales/es.js","store/reducers/locales.reducer.js","components/LocaleSelect.jsx","store/thunks/register.thunks.js","components/login/RegisterDialog.jsx","components/login/Login.jsx","store/thunks/auth.thunks.js","store/thunks/election.thunks.js","store/reducers/elections.reducer.js","store/reducers/utils/reducer.utils.js","store/reducers/panel.reducer.js","components/Navbar.jsx","components/dashboard/UserSelector.jsx","store/thunks/user.thunks.js","components/dashboard/CreateElectionDialog.jsx","components/dashboard/ElectionCard.jsx","components/FabButton.jsx","components/Blob.jsx","components/dashboard/Dashboard.jsx","components/AuthRoute.jsx","components/election/DeleteElectionWarning.jsx","components/election/ElectionSettings.jsx","components/election/utils/parse-data.js","components/election/WinnerChart.jsx","components/election/ElectionDashboard.jsx","components/AlertMessage.jsx","store/reducers/unverified-users.reducer.js","components/admin-panel/UnverifiedUser.jsx","store/thunks/verify.thunks.js","components/admin-panel/VerifyUsersDialog.jsx","components/admin-panel/AdminPanel.jsx","components/election/CandidateCard.jsx","components/election/VotingPanel.jsx","App.js","store/reducers/users.reducer.js","store/reducers/reducer.js","store/store.js","index.js"],"names":["dialogSlice","createSlice","name","initialState","isOpen","reducers","openDialog","state","closeDialog","actions","process","alertSlice","open","message","variant","raiseAlert","action","payload","closeAlert","_action","authSlice","authToken","isAdmin","_id","setAuthToken","logOut","setData","is_admin","en","login","password","logIn","requestAccess","registerDialog","dialogTitle","yourName","code","gender","male","female","cancel","send","careers","computerScience","chemistryEngineering","civilEngineering","medicine","dashboard","blob","createElectionDialog","createElection","title","position","selectCandidates","create","userSelector","placeholder","adminPanel","verifyUsers","candidateCard","cardTitle","deleteElectionWarning","dialogContent","continue","electionDashboard","raiseAlertMessage","electionEnded","userVoted","voteNow","endElection","electionSettings","accept","es","language","locale","locales","setLocale","LocaleSelect","dispatch","useDispatch","currentLanguage","useSelector","FormControl","style","padding","InputLabel","Select","onChange","e","target","value","defaultValue","MenuItem","register","data","a","axios","method","url","serverUrl","then","Object","prototype","hasOwnProperty","call","catch","error","response","RegisterDialog","dialog","useForm","handleSubmit","control","Dialog","maxWidth","fullWidth","DialogTitle","onSubmit","registerThunk","DialogContent","Grid","container","spacing","direction","item","xs","as","TextField","label","rules","required","type","maxLength","component","FormLabel","RadioGroup","aria-label","FormControlLabel","Radio","InputProps","inputProps","min","max","DialogActions","Button","onClick","color","useStyles","makeStyles","theme","Login","classes","history","useHistory","auth","useEffect","push","Container","className","justify","token","err","loginThunk","alignItems","minHeight","vote","createAsyncThunk","thunkAPI","patch","electionId","userId","candidateId","res","electionSlice","elections","currentElection","selectedCandidates","fetchElections","saveElection","setCurrentElection","filter","election","emptyCurrentElection","deleteElection","editElection","electionsWithoutTarget","deleteOne","targetElection","edit","setCandidates","extraReducers","fulfilled","votedCandidate","candidates","candidate","votes","registeredVotes","status","panelSlice","openPanel","closePanel","navbarRightButtons","marginLeft","navbar","marginBottom","Navbar","actionIcon","path","AppBar","Toolbar","IconButton","edge","from","Typography","Tooltip","localStorage","removeItem","defaultProps","UserSelector","users","Autocomplete","multiple","options","getOptionLabel","option","event","renderTags","getTagProps","map","index","Chip","renderInput","params","fetchUsers","get","CreateElectionDialog","useState","isChecked","handleClose","onClose","saveElectionThunk","autoFocus","margin","id","disabled","Switch","checked","card","width","editButton","ElectionCard","Card","CardActionArea","CardContent","fab","top","right","bottom","left","FabButton","Fab","Blob","text","display","justifyContent","alignSelf","justifySelf","viewBox","xmlns","height","fill","d","transform","Dashboard","length","shortid","generate","AuthRoute","children","rest","render","to","DeleteElectionWarning","setIsWarningOpen","deleteElectionThunk","ElectionSettings","isWarningOpen","editElectionThunk","parseData","labels","datasets","backgroundColor","borderColor","borderWidth","WinnerChart","maintainAspectRatio","electionWrapper","banner","banner__title","marginTop","banner__position","ElectionDashboard","hasUserVoted","keys","AlertMessage","alert","Snackbar","autoHideDuration","Alert","elevation","severity","unverifiedUsersSlice","unverifiedUsers","fetchUnverifiedUsers","verifyUser","user","denyUser","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","summary","summaryText","details","flexDirection","UnverifiedUser","Accordion","AccordionSummary","expandIcon","AccordionDetails","gutterBottom","email","AccordionActions","VerifyUsersDialog","VerifyUsersButton","handleAddUserClick","itemText","ListItem","button","ListItemIcon","ListItemText","primary","AdminPanel","setOpenDialog","panel","unverified","Drawer","anchor","List","CandidateCard","CardHeader","avatar","Avatar","career","semester","CardActions","votingPanel","VotingPanel","app","App","usersSlice","setUser","rootReducer","combineReducers","configureStore","reducer","dotenvConfig","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.61115755.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  isOpen: false,\n};\n\nconst dialogSlice = createSlice({\n  name: 'dialog',\n  initialState,\n  reducers: {\n    openDialog(state) {\n      state.isOpen = true;\n    },\n    closeDialog(state) {\n      state.isOpen = false;\n    },\n  },\n});\n\nexport const { openDialog, closeDialog } = dialogSlice.actions;\nexport default dialogSlice.reducer;\n","export default process.env.NODE_ENV === 'development'\n  ? 'http://localhost:5000/api'\n  : 'https://votapp-backend.herokuapp.com/api';\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst alertSlice = createSlice({\n  name: 'alerts',\n  initialState: {\n    open: false,\n    message: '',\n    variant: 'info',\n  },\n  reducers: {\n    raiseAlert(state, action) {\n      state.open = true;\n      state.message = action.payload.message;\n      state.variant = action.payload.variant;\n    },\n    closeAlert(state, _action) {\n      state.open = false;\n      state.message = '';\n      state.variant = '';\n    },\n  },\n});\n\nexport const { raiseAlert, closeAlert } = alertSlice.actions;\nexport default alertSlice.reducer;\n","/* eslint-disable operator-linebreak */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    authToken: '',\n    isAdmin: '',\n    _id: '',\n  },\n  reducers: {\n    setAuthToken(state, action) {\n      state.authToken = action.payload;\n    },\n    logOut(state) {\n      state.authToken = '';\n      state.isAdmin = false;\n      state._id = '';\n    },\n    setData(state, action) {\n      state.isAdmin = action.payload.is_admin;\n      state._id = action.payload._id;\n    },\n  },\n});\n\nexport const { logOut, setAuthToken, setData } = authSlice.actions;\nexport default authSlice.reducer;\n","const en = () => ({\n  login: {\n    password: 'Password',\n    logIn: 'Log In',\n    requestAccess: 'Request access',\n  },\n  registerDialog: {\n    dialogTitle: 'Fill request',\n    yourName: 'Your Name',\n    code: 'Code',\n    password: 'Password',\n    gender: 'Gender',\n    male: 'Male',\n    female: 'Female',\n    cancel: 'Cancel',\n    send: 'Send',\n    careers: {\n      computerScience: 'Computer Science',\n      chemistryEngineering: 'Chemistry Engineering',\n      civilEngineering: 'Civil Engineering',\n      medicine: 'Medicine',\n    },\n  },\n  dashboard: {\n    blob: 'There are no elections yet',\n  },\n  createElectionDialog: {\n    createElection: 'Create election',\n    title: 'Title',\n    position: 'Position',\n    selectCandidates: 'Select Candidates Beforehand',\n    cancel: 'Cancel',\n    create: 'Create',\n  },\n  userSelector: {\n    placeholder: 'Select the candidates',\n  },\n  adminPanel: {\n    verifyUsers: 'Verify Users',\n  },\n  candidateCard: {\n    cardTitle: 'Candidate',\n  },\n  deleteElectionWarning: {\n    dialogTitle: 'Are you sure you want to delete this?',\n    dialogContent: \"This can't be undone\",\n    cancel: 'Cancel',\n    continue: 'Continue',\n  },\n  electionDashboard: {\n    blob: 'You can vote now!',\n    raiseAlertMessage: 'You already voted!',\n    electionEnded: 'The election has ended',\n    userVoted: 'You already voted',\n    voteNow: 'Vote now!',\n    endElection: 'End Election',\n  },\n  electionSettings: {\n    dialogTitle: 'Election settings',\n    title: 'Title',\n    position: 'Position',\n    cancel: 'Cancel',\n    accept: 'Accept',\n  },\n});\n\nexport default en;\n","const es = () => ({\n  login: {\n    password: 'Contraseña',\n    logIn: 'Ingresar',\n    requestAccess: 'Solicitar acceso',\n  },\n  registerDialog: {\n    dialogTitle: 'Llena la solicitud',\n    yourName: 'Tu nombre',\n    code: 'Código',\n    password: 'Contraseña',\n    gender: 'Género',\n    male: 'Hombre',\n    female: 'Mujer',\n    cancel: 'Cancelar',\n    send: 'Enviar',\n    careers: {\n      computerScience: 'Ingeniería de Sistemas',\n      chemistryEngineering: 'Ingeniería Química',\n      civilEngineering: 'Ingeniería Civil',\n      medicine: 'Medicina',\n    },\n  },\n  dashboard: {\n    blob: 'No hay elecciones.',\n  },\n  createElectionDialog: {\n    createElection: 'Crear elección',\n    title: 'Titulo',\n    position: 'Posición',\n    selectCandidates: 'Seleccionar candidatos de antemano',\n    cancel: 'Cancelar',\n    create: 'Crear',\n  },\n  userSelector: {\n    placeholder: 'Selecciona los candidatos',\n  },\n  adminPanel: {\n    verifyUsers: 'Verificar usuarios',\n  },\n  candidateCard: {\n    cardTitle: 'Candidato',\n  },\n  deleteElectionWarning: {\n    dialogTitle: 'Está seguro que quiere eliminar esta elección?',\n    dialogContent: 'Esto no puede deshacerse',\n    cancel: 'Cancelar',\n    continue: 'Continuar',\n  },\n  electionDashboard: {\n    blob: 'Puede votar ahora!',\n    raiseAlertMessage: 'Ya has votado!',\n    electionEnded: 'La elección ha terminado',\n    userVoted: 'Ya has votado!',\n    voteNow: 'Vota ahora!',\n    endElection: 'Terminar elección',\n  },\n  electionSettings: {\n    dialogTitle: 'Ajustes de elección',\n    title: 'Título',\n    position: 'Posición',\n    cancel: 'Cancelar',\n    accept: 'Aceptar',\n  },\n});\n\nexport default es;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport en from '../../locales/en';\nimport es from '../../locales/es';\n\nconst initialState = {\n  language: 'en',\n  locale: en(),\n};\n\nconst locales = createSlice({\n  name: 'locales',\n  initialState,\n  reducers: {\n    setLocale(state, action) {\n      state.language = action.payload;\n      if (state.language === 'en') {\n        state.locale = en();\n      } else {\n        state.locale = es();\n      }\n    },\n  },\n});\n\nexport const { setLocale } = locales.actions;\nexport default locales.reducer;\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport { InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLocale } from '../store/reducers/locales.reducer';\n\nconst LocaleSelect = () => {\n  const dispatch = useDispatch();\n  const currentLanguage = useSelector((state) => state.locales.language);\n  const onChangeHandler = (e) => {\n    dispatch(setLocale(e.target.value));\n  };\n  return (\n    <FormControl style={{ padding: 10 }}>\n      <InputLabel>Language</InputLabel>\n      <Select onChange={onChangeHandler} defaultValue={currentLanguage}>\n        <MenuItem value=\"en\">English</MenuItem>\n        <MenuItem value=\"es\">Español</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default LocaleSelect;\n","/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport axios from 'axios';\nimport serverUrl from './utils/server-url';\nimport { raiseAlert } from '../reducers/alerts.reducer';\n\nconst register = (data) => async (dispatch) => {\n  await axios({\n    method: 'POST',\n    url: `${serverUrl}/users/`,\n    data,\n  })\n    .then(() => {\n      if (Object.prototype.hasOwnProperty.call(data, 'is_admin')) {\n        dispatch(\n          raiseAlert({\n            message: 'New admin has been created',\n            variant: 'success',\n          })\n        );\n      } else {\n        dispatch(\n          raiseAlert({\n            message: 'Request sent!',\n            variant: 'success',\n          })\n        );\n      }\n    })\n    .catch((error) =>\n      dispatch(\n        raiseAlert({ message: error.response.data.error, variant: 'error' })\n      )\n    );\n};\n\nexport default register;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport React from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeDialog } from '../../store/reducers/dialogs.reducer';\nimport registerThunk from '../../store/thunks/register.thunks';\n\nconst RegisterDialog = () => {\n  const isOpen = useSelector((state) => state.dialog.isOpen);\n  const locales = useSelector((state) => state.locales.locale.registerDialog);\n  const { handleSubmit, control } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    dispatch(registerThunk(data));\n    dispatch(closeDialog());\n  };\n  const handleCancel = () => dispatch(closeDialog());\n\n  return (\n    <Dialog open={isOpen} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>{locales.dialogTitle}</DialogTitle>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogContent>\n          <Grid container spacing={3} direction=\"column\">\n            <Grid item xs={12}>\n              <Controller\n                name=\"name\"\n                as={\n                  <TextField name=\"name\" label={locales.yourName} fullWidth />\n                }\n                control={control}\n                defaultValue=\"\"\n                rules={{\n                  required: true,\n                }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Controller\n                name=\"code\"\n                as={\n                  <TextField\n                    type=\"number\"\n                    name=\"code\"\n                    label={locales.code}\n                    fullWidth\n                  />\n                }\n                control={control}\n                defaultValue=\"\"\n                rules={{\n                  required: true,\n                  maxLength: 10,\n                }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Controller\n                name=\"email\"\n                as={\n                  <TextField\n                    type=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    fullWidth\n                  />\n                }\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: true }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Controller\n                name=\"password\"\n                as={\n                  <TextField\n                    type=\"password\"\n                    name=\"password\"\n                    label={locales.password}\n                    fullWidth\n                  />\n                }\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: true }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Controller\n                name=\"gender\"\n                as={\n                  <FormControl component=\"fieldset\" fullWidth>\n                    <FormLabel component=\"legend\">{locales.gender}</FormLabel>\n                    <RadioGroup aria-label=\"gender\" name=\"gender\">\n                      <FormControlLabel\n                        value=\"female\"\n                        label={locales.female}\n                        control={<Radio />}\n                      />\n                      <FormControlLabel\n                        value=\"male\"\n                        label={locales.male}\n                        control={<Radio />}\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                }\n                control={control}\n                defaultValue=\"\"\n                rules={{ required: true }}\n              />\n            </Grid>\n            <Grid item xs>\n              <FormControl fullWidth>\n                <InputLabel>Career</InputLabel>\n                <Controller\n                  name=\"career\"\n                  as={\n                    <Select fullWidth>\n                      <MenuItem value=\"computerScience\">\n                        {locales.careers.computerScience}\n                      </MenuItem>\n                      <MenuItem value=\"chemistryEngineering\">\n                        {locales.careers.chemistryEngineering}\n                      </MenuItem>\n                      <MenuItem value=\"civilEngineering\">\n                        {locales.careers.civilEngineering}\n                      </MenuItem>\n                      <MenuItem value=\"medicine\">\n                        {locales.careers.medicine}\n                      </MenuItem>\n                    </Select>\n                  }\n                  control={control}\n                  rules={{ required: true }}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs>\n              <Controller\n                name=\"semester\"\n                as={\n                  <TextField\n                    type=\"number\"\n                    InputProps={{ inputProps: { min: 1, max: 10 } }}\n                    label=\"Semester\"\n                    fullWidth\n                  />\n                }\n                control={control}\n                defaultValue={1}\n                rules={{ required: true }}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color=\"secondary\" variant=\"outlined\">\n            {locales.cancel}\n          </Button>\n          <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n            {locales.send}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default RegisterDialog;\n","import {\n  Button,\n  Container,\n  FormControl,\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport React, { useEffect } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { openDialog } from '../../store/reducers/dialogs.reducer';\nimport { loginThunk } from '../../store/thunks/auth.thunks';\nimport LocaleSelect from '../LocaleSelect';\nimport RegisterDialog from './RegisterDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction Login() {\n  const { handleSubmit, control } = useForm();\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n  const authToken = useSelector((state) => state.auth.authToken);\n  const locales = useSelector((state) => state.locales.locale.login);\n\n  useEffect(() => {\n    if (authToken !== '') {\n      history.push('/');\n    }\n  }, [authToken]);\n\n  const onSubmit = (data) => {\n    dispatch(loginThunk(data));\n    history.push('/');\n  };\n\n  const handleRegisterClick = () => {\n    dispatch(openDialog());\n  };\n\n  return (\n    <Container className={classes.container} maxWidth=\"md\">\n      <Grid container justify=\"flex-end\">\n        <Grid item>\n          <LocaleSelect />\n        </Grid>\n      </Grid>\n      <Grid>\n        <RegisterDialog />\n        <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '100vh' }}>\n            <Grid item>\n              <Grid\n                container\n                spacing={3}\n                direction=\"column\"\n                alignItems=\"center\">\n                <Grid item>\n                  <FormControl>\n                    <Controller\n                      name=\"email\"\n                      as={\n                        <TextField\n                          variant=\"outlined\"\n                          name=\"email\"\n                          label=\"Email\"\n                        />\n                      }\n                      control={control}\n                      defaultValue=\"\"\n                      rules={{\n                        required: true,\n                        min: 6,\n                        max: 1024,\n                      }}\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item>\n                  <FormControl>\n                    <Controller\n                      name=\"password\"\n                      as={\n                        <TextField\n                          label={locales.password}\n                          name=\"password\"\n                          type=\"password\"\n                          variant=\"outlined\"\n                        />\n                      }\n                      control={control}\n                      defaultValue=\"\"\n                      rules={{\n                        required: true,\n                        min: 6,\n                        max: 1024,\n                      }}\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid container spacing={2}>\n                  <Grid item>\n                    <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n                      {locales.logIn}\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      color=\"primary\"\n                      variant=\"outlined\"\n                      onClick={handleRegisterClick}>\n                      {locales.requestAccess}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Login;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-undef */\nimport axios from 'axios';\nimport serverUrl from './utils/server-url';\nimport { raiseAlert } from '../reducers/alerts.reducer';\nimport { logOut, setAuthToken, setData } from '../reducers/auth-token.reducer';\n\nexport const loginThunk = (data) => async (dispatch) => {\n  await axios({\n    method: 'POST',\n    url: `${serverUrl}/login/`,\n    data,\n  })\n    .then((response) => {\n      const payload = response.data.token;\n      dispatch(setAuthToken(payload));\n\n      dispatch(\n        setData({ _id: response.data._id, is_admin: response.data.is_admin })\n      );\n    })\n    .catch((err) => {\n      dispatch(\n        raiseAlert({ variant: 'error', message: err.response.data.error })\n      );\n    });\n};\n\nexport const logoutThunk = () => (dispatch) => {\n  localStorage.removeItem('AUTH_TOKEN');\n  dispatch(logOut());\n};\n","/* eslint-disable import/no-cycle */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-underscore-dangle */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport serverUrl from './utils/server-url';\nimport { raiseAlert } from '../reducers/alerts.reducer';\nimport {\n  deleteElection,\n  editElection,\n  fetchElections,\n  saveElection,\n} from '../reducers/elections.reducer';\n\nexport const fetchElectionsThunk = () => async (dispatch) => {\n  await axios\n    .get(`${serverUrl}/elections/`)\n    .then((response) => dispatch(fetchElections(response.data)));\n};\n\nexport const saveElectionThunk = (data) => async (dispatch) => {\n  await axios({\n    method: 'POST',\n    url: `${serverUrl}/elections`,\n    data,\n  })\n    .then((response) => {\n      dispatch(saveElection(response.data));\n    })\n    .catch((err) => {\n      dispatch(\n        raiseAlert({ variant: 'error', message: err.response.data.error })\n      );\n    });\n};\n\nexport const editElectionThunk = (data) => async (dispatch) => {\n  await axios({\n    method: 'PATCH',\n    url: `${serverUrl}/elections/${data._id}`,\n    data,\n  })\n    .then(() => dispatch(editElection(data)))\n    .catch((err) => {\n      dispatch(\n        raiseAlert({ variant: 'error', message: err.response.data.error })\n      );\n    });\n};\n\nexport const deleteElectionThunk = (id) => async (dispatch) => {\n  await axios({\n    method: 'DELETE',\n    url: `${serverUrl}/elections/${id}`,\n  })\n    .then(() => dispatch(deleteElection(id)))\n    .catch((err) => {\n      dispatch(\n        raiseAlert({ variant: 'error', message: err.response.data.error })\n      );\n    });\n};\n\nexport const vote = createAsyncThunk(\n  'elections/voteStatus',\n  async (data, thunkAPI) => {\n    const res = await axios\n      .patch(`${serverUrl}/elections/vote/${data.electionId}`, {\n        userId: data.userId,\n        candidateId: data.candidateId,\n      })\n      .then((response) => {\n        thunkAPI.dispatch(\n          raiseAlert({ message: 'Ballot stored!', variant: 'success' })\n        );\n        return response;\n      })\n      .catch((err) =>\n        thunkAPI.dispatch(\n          raiseAlert({ message: err.response.data.error, variant: 'error' })\n        )\n      );\n    return res;\n  }\n);\n\nexport const endElection = createAsyncThunk(\n  'elections/endElectionStatus',\n  async (electionId, thunkAPI) => {\n    const res = await axios\n      .patch(`${serverUrl}/elections/end/${electionId}`)\n      .then((response) => {\n        thunkAPI.dispatch(\n          raiseAlert({\n            message: 'The election has ended successfully',\n            variant: 'success',\n          })\n        );\n        return response;\n      })\n      .catch((err) => {\n        thunkAPI.dispatch(\n          raiseAlert({ message: err.response.data.error, variant: 'error' })\n        );\n      });\n    return res;\n  }\n);\n","/* eslint-disable import/no-cycle */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-underscore-dangle */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { editElection as edit } from './utils/reducer.utils';\nimport { endElection, vote } from '../thunks/election.thunks';\n\nconst initialState = {\n  elections: [],\n  currentElection: {},\n  selectedCandidates: [],\n};\n\nconst electionSlice = createSlice({\n  name: 'elections',\n  initialState,\n  reducers: {\n    fetchElections(state, action) {\n      state.elections = action.payload;\n    },\n    saveElection(state, action) {\n      state.elections.push(action.payload);\n    },\n    setCurrentElection(state, action) {\n      state.currentElection = state.elections.filter(\n        (election) => election._id === action.payload\n      )[0];\n    },\n    emptyCurrentElection(state) {\n      state.currentElection = {};\n    },\n    deleteElection(state, action) {\n      state.elections = state.elections.filter(\n        (election) => election._id !== action.payload\n      );\n      state.currentElection = {};\n    },\n    editElection(state, action) {\n      state.elections = edit(state.elections, action.payload);\n      state.currentElection = action.payload;\n    },\n    setCandidates(state, action) {\n      state.selectedCandidates = action.payload;\n    },\n  },\n  extraReducers: {\n    [vote.fulfilled]: (state, action) => {\n      const votedCandidate = state.currentElection.candidates.filter(\n        (candidate) => candidate._id === action.payload.candidateId\n      );\n\n      votedCandidate.votes += 1;\n\n      state.currentElection.candidates.filter(\n        (candidate) => candidate._id !== action.payload.candidateId\n      );\n\n      state.currentElection.candidates.push(votedCandidate);\n\n      state.currentElection.registeredVotes.push(action.payload.userId);\n\n      state.elections.filter(\n        (election) => election._id !== state.currentElection._id\n      );\n\n      state.elections.push(state.currentElection);\n    },\n    [endElection.fulfilled]: (state) => {\n      state.currentElection.status = 'finished';\n\n      state.elections.filter(\n        (election) => election._id !== state.currentElection._id\n      );\n\n      state.elections.push(state.currentElection);\n    },\n  },\n});\n\nexport const {\n  deleteElection,\n  editElection,\n  emptyCurrentElection,\n  fetchElections,\n  saveElection,\n  setCurrentElection,\n  setCandidates,\n} = electionSlice.actions;\nexport default electionSlice.reducer;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-underscore-dangle */\nexport const getElection = (elections, _id) =>\n  elections.filter((election) => election._id !== _id);\n\nexport const deleteOne = (elections, _id) =>\n  elections.filter((election) => election._id !== _id);\n\nexport const editElection = (elections, data) => {\n  const electionsWithoutTarget = deleteOne(elections, data._id);\n\n  const targetElection = { ...data };\n\n  return [...electionsWithoutTarget, targetElection];\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  open: false,\n};\n\nconst panelSlice = createSlice({\n  name: 'panel',\n  initialState,\n  reducers: {\n    openPanel(state) {\n      state.open = true;\n    },\n    closePanel(state) {\n      state.open = false;\n    },\n  },\n});\n\nexport const { closePanel, openPanel } = panelSlice.actions;\nexport default panelSlice.reducer;\n","import React from 'react';\nimport {\n  Toolbar,\n  AppBar,\n  Typography,\n  IconButton,\n  makeStyles,\n  Tooltip,\n} from '@material-ui/core';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport BackIcon from '@material-ui/icons/ArrowBack';\nimport PropTypes from 'prop-types';\nimport { logoutThunk } from '../store/thunks/auth.thunks';\nimport { emptyCurrentElection } from '../store/reducers/elections.reducer';\nimport { openPanel } from '../store/reducers/panel.reducer';\n\nconst useStyles = makeStyles(() => ({\n  navbarRightButtons: {\n    marginLeft: 'auto',\n  },\n  navbar: {\n    marginBottom: 20,\n  },\n}));\n\nconst Navbar = ({ actionIcon, path }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleLogout = () => {\n    dispatch(logoutThunk());\n    history.push('/login');\n  };\n\n  const handleOnClick = () => {\n    if (actionIcon === 'back') {\n      dispatch(emptyCurrentElection());\n      history.push(path.from);\n    } else {\n      history.push('/');\n    }\n  };\n\n  const openPanelHandler = () => {\n    dispatch(openPanel());\n  };\n\n  return (\n    <div className=\"appbar-wrapper\">\n      <AppBar position=\"static\" className={classes.navbar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={handleOnClick}>\n            {actionIcon === 'back' ? <BackIcon /> : <HowToVoteIcon />}\n          </IconButton>\n          <Typography variant=\"h5\">Voteapp</Typography>\n          <div className={classes.navbarRightButtons}>\n            <Tooltip title=\"Admin Panel\">\n              <IconButton color=\"inherit\" onClick={openPanelHandler}>\n                <SettingsIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Logout\">\n              <IconButton color=\"inherit\" onClick={handleLogout}>\n                <ExitToAppIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nNavbar.defaultProps = {\n  actionIcon: 'home',\n  path: { from: '' },\n};\n\nNavbar.propTypes = {\n  actionIcon: PropTypes.string,\n  path: PropTypes.shape({\n    from: PropTypes.string,\n  }),\n};\n\nexport default Navbar;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Chip, TextField } from '@material-ui/core';\nimport { setCandidates } from '../../store/reducers/elections.reducer';\n\nconst UserSelector = () => {\n  const users = useSelector((state) => state.users.users);\n  const dispatch = useDispatch();\n  const locales = useSelector((state) => state.locales.locale.userSelector);\n\n  return (\n    <Autocomplete\n      multiple\n      options={users}\n      getOptionLabel={(option) => option.name}\n      onChange={(event, value) => dispatch(setCandidates(value))}\n      renderTags={(value, getTagProps) =>\n        value.map((option, index) => (\n          <Chip\n            variant=\"default\"\n            label={option.name}\n            {...getTagProps({ index })}\n          />\n        ))\n      }\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          variant=\"outlined\"\n          placeholder={locales.placeholder}\n        />\n      )}\n    />\n  );\n};\n\nexport default UserSelector;\n","/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-unused-vars */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport serverUrl from './utils/server-url';\nimport { raiseAlert } from '../reducers/alerts.reducer';\n\nconst fetchUsers = createAsyncThunk(\n  'users/fetchUsersStatus',\n  async (thunkAPI) => {\n    const res = axios\n      .get(`${serverUrl}/users/`)\n      .then((response) => response.data)\n      .catch((err) =>\n        thunkAPI.dispatch(\n          raiseAlert({ message: err.response.data.error, variant: 'error' })\n        )\n      );\n    return res;\n  }\n);\n\nexport default fetchUsers;\n","/* eslint-disable react/jsx-wrap-multilines */\nimport React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  Grid,\n  Switch,\n  TextField,\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Controller, useForm } from 'react-hook-form';\nimport { closeDialog } from '../../store/reducers/dialogs.reducer';\nimport { saveElectionThunk } from '../../store/thunks/election.thunks';\nimport UserSelector from './UserSelector';\nimport fetchUsers from '../../store/thunks/user.thunks';\n\nconst CreateElectionDialog = () => {\n  const { handleSubmit, control } = useForm();\n  const [isChecked] = useState(true);\n  const dispatch = useDispatch();\n  const isOpen = useSelector((state) => state.dialog.isOpen);\n  const locales = useSelector(\n    (state) => state.locales.locale.createElectionDialog,\n  );\n  const selectedCandidates = useSelector(\n    (state) => state.election.selectedCandidates,\n  );\n\n  const handleClose = () => dispatch(closeDialog());\n  const onSubmit = (data) => {\n    dispatch(saveElectionThunk({ ...data, candidates: selectedCandidates }));\n    handleClose();\n  };\n\n  useEffect(() => dispatch(fetchUsers()), []);\n\n  return (\n    <Dialog open={isOpen} onClose={handleClose} fullWidth maxWidth=\"xs\">\n      <DialogTitle>{locales.createElection}</DialogTitle>\n      <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\n        <DialogContent>\n          <Grid container direction=\"column\">\n            <Grid item>\n              <Controller\n                name=\"title\"\n                as={\n                  <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"election-title\"\n                    label={locales.title}\n                    type=\"text\"\n                    fullWidth\n                    variant=\"filled\"\n                    name=\"title\"\n                  />\n                }\n                control={control}\n                defaultValue=\"\"\n                rules={{\n                  required: true,\n                  min: 6,\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <Controller\n                name=\"position\"\n                as={\n                  <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"election-position\"\n                    label={locales.position}\n                    type=\"text\"\n                    fullWidth\n                    variant=\"filled\"\n                    name=\"position\"\n                  />\n                }\n                control={control}\n                defaultValue=\"\"\n                rules={{\n                  required: true,\n                  min: 6,\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                disabled\n                control={<Switch checked={isChecked} />}\n                label={locales.selectCandidates}\n              />\n            </Grid>\n            {isChecked && (\n              <Grid item>\n                <UserSelector />\n              </Grid>\n            )}\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={handleClose}>\n            {locales.cancel}\n          </Button>\n          <Button color=\"primary\" type=\"submit\">\n            {locales.create}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default CreateElectionDialog;\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { setCurrentElection } from '../../store/reducers/elections.reducer';\n\nconst useStyles = makeStyles({\n  card: {\n    width: 275,\n  },\n  editButton: {\n    marginLeft: 'auto',\n  },\n});\n\nconst ElectionCard = ({ data }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const onClickHandler = () => {\n    dispatch(setCurrentElection(data._id));\n    history.push('/election');\n  };\n\n  return (\n    <Card className={classes.card} variant=\"outlined\" onClick={onClickHandler}>\n      <CardActionArea>\n        <CardContent>\n          <Typography variant=\"h5\">{data.title}</Typography>\n          <Typography>{data.position}</Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nElectionCard.propTypes = {\n  data: PropTypes.shape({\n    _id: PropTypes.string,\n    title: PropTypes.string,\n    position: PropTypes.string,\n  }).isRequired,\n};\n\nexport default ElectionCard;\n","import React from 'react';\nimport { Fab, makeStyles } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useDispatch } from 'react-redux';\nimport { openDialog } from '../store/reducers/dialogs.reducer';\n\nconst useStyles = makeStyles(() => ({\n  fab: {\n    margin: 0,\n    top: 'auto',\n    right: 20,\n    bottom: 20,\n    left: 'auto',\n    position: 'fixed',\n  },\n}));\n\nconst FabButton = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"fab-wrapper\">\n      <Fab\n        color=\"secondary\"\n        aria-label=\"add\"\n        className={classes.fab}\n        onClick={() => dispatch(openDialog())}\n      >\n        <AddIcon />\n      </Fab>\n    </div>\n  );\n};\n\nexport default FabButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\n\nconst Blob = ({ text }) => (\n  <div\n    style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n  >\n    <Typography\n      variant=\"h4\"\n      color=\"secondary\"\n      style={{\n        position: 'absolute',\n        margin: '0 auto',\n        alignSelf: 'center',\n        justifySelf: 'center',\n      }}\n    >\n      {text}\n    </Typography>\n    <svg\n      viewBox=\"0 0 200 200\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"500px\"\n      height=\"400px\"\n      style={{}}\n    >\n      <path\n        fill=\"#8CB3FF\"\n        d=\"M26.8,-48.5C38.8,-39.6,55.2,-40.5,66.5,-34C77.8,-27.6,84,-13.8,83.2,-0.5C82.3,12.8,74.5,25.6,66.5,37.9C58.5,50.1,50.5,61.8,39.4,67.7C28.3,73.6,14.1,73.8,1.5,71.2C-11.1,68.6,-22.3,63.3,-33.1,57.2C-43.8,51.1,-54.3,44.2,-58.2,34.5C-62.1,24.9,-59.5,12.4,-56.8,1.6C-54,-9.3,-51.2,-18.6,-48,-29.6C-44.9,-40.7,-41.6,-53.4,-33.5,-64.6C-25.5,-75.8,-12.7,-85.4,-2.6,-80.8C7.4,-76.2,14.9,-57.5,26.8,-48.5Z\"\n        transform=\"translate(100 100)\"\n      />\n    </svg>\n  </div>\n);\n\nBlob.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Blob;\n","/* eslint-disable no-underscore-dangle */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport shortid from 'shortid';\nimport { Grid } from '@material-ui/core';\nimport Navbar from '../Navbar';\nimport CreateElectionDialog from './CreateElectionDialog';\nimport ElectionCard from './ElectionCard';\nimport FabButton from '../FabButton';\nimport { fetchElectionsThunk } from '../../store/thunks/election.thunks';\nimport { raiseAlert } from '../../store/reducers/alerts.reducer';\nimport Blob from '../Blob';\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n\n  useEffect(async () => {\n    try {\n      dispatch(fetchElectionsThunk());\n    } catch (err) {\n      dispatch(raiseAlert({ variant: 'error', message: err }));\n    }\n  }, []);\n\n  const elections = useSelector((state) => state.election.elections);\n  const isAdmin = useSelector((state) => state.auth.isAdmin);\n  const locale = useSelector((state) => state.locales.locale.dashboard);\n\n  return (\n    <div className=\"dashboard-wrapper\">\n      {isAdmin && <FabButton />}\n      <Navbar />\n      <CreateElectionDialog />\n      {elections.length === 0 && <Blob text={locale.blob} />}\n      <Grid\n        container\n        spacing={2}\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ margin: 0 }}\n        xs={12}\n      >\n        {elections.map((election) => (\n          <Grid item key={shortid.generate()}>\n            <ElectionCard\n              data={{\n                _id: election._id,\n                title: election.title,\n                position: election.position,\n              }}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\n\nconst AuthRoute = ({ children, ...rest }) => {\n  const authToken = useSelector((state) => state.auth.authToken);\n\n  return (\n    <Route\n      {...rest}\n      render={() => (authToken !== '' ? children : <Redirect to=\"/login\" />)}\n    />\n  );\n};\n\nexport default AuthRoute;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { closeDialog } from '../../store/reducers/dialogs.reducer';\nimport { deleteElectionThunk } from '../../store/thunks/election.thunks';\nimport { raiseAlert } from '../../store/reducers/alerts.reducer';\n\nconst DeleteElectionWarning = ({ open, setIsWarningOpen }) => {\n  const dispatch = useDispatch();\n  const id = useSelector((state) => state.election.currentElection._id);\n  const locales = useSelector(\n    (state) => state.locales.locale.deleteElectionWarning\n  );\n  const history = useHistory();\n\n  const handleClick = () => {\n    try {\n      dispatch(deleteElectionThunk(id));\n      setIsWarningOpen(false);\n      dispatch(closeDialog());\n      history.push('/');\n    } catch (err) {\n      dispatch(raiseAlert({ variant: 'error', message: err }));\n    }\n  };\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>{locales.dialogTitle}</DialogTitle>\n      <DialogContent>{locales.dialogContent}</DialogContent>\n      <DialogActions>\n        <Button onClick={() => setIsWarningOpen(false)} color=\"secondary\">\n          {locales.cancel}\n        </Button>\n        <Button onClick={handleClick}>{locales.continue}</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nDeleteElectionWarning.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setIsWarningOpen: PropTypes.func.isRequired,\n};\n\nexport default DeleteElectionWarning;\n","/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable no-underscore-dangle */\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  TextField,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Controller, useForm } from 'react-hook-form';\nimport { closeDialog } from '../../store/reducers/dialogs.reducer';\nimport { editElectionThunk } from '../../store/thunks/election.thunks';\nimport DeleteElectionWarning from './DeleteElectionWarning';\nimport { raiseAlert } from '../../store/reducers/alerts.reducer';\n\nconst ElectionSettings = () => {\n  const { handleSubmit, control } = useForm();\n  const [isWarningOpen, setIsWarningOpen] = useState(false);\n  const isOpen = useSelector((state) => state.dialog.isOpen);\n  const locales = useSelector((state) => state.locales.locale.electionSettings);\n  const currentElection = useSelector(\n    (state) => state.election.currentElection\n  );\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    try {\n      dispatch(editElectionThunk({ ...currentElection, ...data }));\n      dispatch(closeDialog());\n    } catch (err) {\n      dispatch(raiseAlert({ variant: 'error', message: err }));\n    }\n  };\n\n  return (\n    <div className=\"election-settings-wrapper\">\n      <DeleteElectionWarning\n        open={isWarningOpen}\n        setIsWarningOpen={setIsWarningOpen}\n      />\n      <Dialog open={isOpen} fullWidth maxWidth=\"xs\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogTitle>{locales.dialogTitle}</DialogTitle>\n          <DialogContent>\n            <Grid container direction=\"column\">\n              <Grid item>\n                <Controller\n                  name=\"title\"\n                  as={\n                    <TextField\n                      margin=\"dense\"\n                      label={locales.title}\n                      type=\"text\"\n                      fullWidth\n                      variant=\"filled\"\n                      name=\"title\"\n                    />\n                  }\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: true,\n                    min: 6,\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <Controller\n                  name=\"position\"\n                  as={\n                    <TextField\n                      margin=\"dense\"\n                      label={locales.position}\n                      type=\"text\"\n                      fullWidth\n                      variant=\"filled\"\n                      name=\"position\"\n                    />\n                  }\n                  rules={{\n                    required: true,\n                    min: 6,\n                  }}\n                  defaultValue=\"\"\n                  control={control}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                <IconButton onClick={() => setIsWarningOpen(true)}>\n                  <DeleteIcon />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <div>\n                  <Button\n                    color=\"primary\"\n                    onClick={() => dispatch(closeDialog())}>\n                    {locales.cancel}\n                  </Button>\n                  <Button color=\"primary\" type=\"submit\">\n                    {locales.accept}\n                  </Button>\n                </div>\n              </Grid>\n            </Grid>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ElectionSettings;\n","const parseData = (data) => {\n  const votes = data.map((candidates) => candidates.votes);\n  const names = data.map((candidates) => candidates.name);\n\n  return {\n    labels: names,\n    datasets: [\n      {\n        label: 'Number of votes',\n        data: votes,\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n};\n\nexport default parseData;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Bar } from '@reactchartjs/react-chart.js';\nimport parseData from './utils/parse-data';\n\nconst WinnerChart = () => {\n  const candidates = useSelector(\n    (state) => state.election.currentElection.candidates,\n  );\n\n  return (\n    <Bar\n      data={parseData(candidates)}\n      height={400}\n      width={75}\n      options={{ maintainAspectRatio: false }}\n    />\n  );\n};\n\nexport default WinnerChart;\n","/* eslint-disable no-nested-ternary */\nimport {\n  Button,\n  Container,\n  IconButton,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport FabButton from '../FabButton';\nimport NavBar from '../Navbar';\nimport { openDialog } from '../../store/reducers/dialogs.reducer';\nimport ElectionSettings from './ElectionSettings';\nimport { endElection } from '../../store/thunks/election.thunks';\nimport WinnerChart from './WinnerChart';\nimport { raiseAlert } from '../../store/reducers/alerts.reducer';\nimport Blob from '../Blob';\n\nconst useStyles = makeStyles(() => ({\n  electionWrapper: {\n    height: '100vh',\n  },\n  banner: {\n    margin: 0,\n  },\n  banner__title: {\n    marginTop: 25,\n    marginBottom: 10,\n  },\n  banner__position: {\n    marginBottom: 25,\n  },\n}));\n\nconst ElectionDashboard = () => {\n  const currentElection = useSelector(\n    (state) => state.election.currentElection\n  );\n  const auth = useSelector((state) => state.auth);\n  const locales = useSelector(\n    (state) => state.locales.locale.electionDashboard\n  );\n  const hasUserVoted =\n    currentElection.registeredVotes.filter((vote) => vote === auth._id)\n      .length === 1;\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (Object.keys(currentElection).length === 0) history.push('/');\n  });\n\n  const onButtonClick = () => {\n    if (!auth.isAdmin) {\n      history.push('/vote');\n    } else if (hasUserVoted) {\n      dispatch(\n        raiseAlert({ message: locales.raiseAlertMessage, variant: 'warning' })\n      );\n    } else {\n      dispatch(endElection(currentElection._id));\n    }\n  };\n\n  return (\n    <div className={classes.electionWrapper}>\n      <NavBar actionIcon=\"back\" path={{ from: '/' }} />\n      <ElectionSettings />\n      {auth.isAdmin && <FabButton />}\n      <Container maxWidth=\"md\" className={classes.banner}>\n        <Typography variant=\"h4\" className={classes.banner__title}>\n          {currentElection.title}\n        </Typography>\n        <Typography variant=\"h5\" className={classes.banner__position}>\n          {currentElection.position}\n        </Typography>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={onButtonClick}\n          disabled={currentElection.status === 'finished' || hasUserVoted}>\n          {currentElection.status === 'finished'\n            ? locales.electionEnded\n            : !auth.isAdmin\n            ? hasUserVoted\n              ? locales.userVoted\n              : locales.voteNow\n            : locales.endElection}\n        </Button>\n        {auth.isAdmin && (\n          <IconButton onClick={() => dispatch(openDialog())}>\n            <SettingsIcon />\n          </IconButton>\n        )}\n      </Container>\n      <div className=\"winner-graph\">\n        {currentElection.status === 'finished' ? (\n          <WinnerChart />\n        ) : (\n          <Blob text={locales.blob} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ElectionDashboard;\n","import { Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeAlert } from '../store/reducers/alerts.reducer';\n\nconst AlertMessage = () => {\n  const { open, message, variant } = useSelector((state) => state.alert);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    dispatch(closeAlert());\n  };\n\n  return (\n    <Snackbar autoHideDuration={6000} open={open} onClose={handleClose}>\n      <Alert\n        elevation={6}\n        variant=\"filled\"\n        severity={variant}\n        onClose={handleClose}\n      >\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default AlertMessage;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  unverifiedUsers: [],\n};\n\nconst unverifiedUsersSlice = createSlice({\n  name: 'unverified',\n  initialState,\n  reducers: {\n    fetchUnverifiedUsers(state, action) {\n      state.unverifiedUsers = action.payload;\n    },\n    verifyUser(state, action) {\n      state.unverifiedUsers = state.unverifiedUsers.filter(\n        (user) => user._id !== action.payload\n      );\n    },\n    denyUser(state, action) {\n      state.unverifiedUsers = state.unverifiedUsers.filter(\n        (user) => user._id !== action.payload\n      );\n    },\n  },\n});\n\nexport const {\n  denyUser,\n  fetchUnverifiedUsers,\n  verifyUser,\n} = unverifiedUsersSlice.actions;\nexport default unverifiedUsersSlice.reducer;\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Accordion,\n  AccordionActions,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { useDispatch } from 'react-redux';\nimport {\n  denyUserThunk,\n  verifyUserThunk,\n} from '../../store/thunks/verify.thunks';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  summary: {\n    backgroundColor: '#d5d5d5',\n  },\n  summaryText: {\n    margin: theme.spacing(1),\n  },\n  details: {\n    flexDirection: 'column',\n  },\n}));\n\nconst UnverifiedUser = ({ data }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleAccept = () => {\n    dispatch(verifyUserThunk(data._id));\n  };\n\n  const handleDeny = () => {\n    dispatch(denyUserThunk(data._id));\n  };\n\n  return (\n    <Accordion className={classes.root}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        className={classes.summary}\n      >\n        <Typography variant=\"h5\">{data.name}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.details}>\n        <Typography gutterBottom>\n          Code:\n          {data.code}\n        </Typography>\n        <br />\n        <Typography gutterBottom>\n          Email:\n          {data.email}\n        </Typography>\n        <br />\n        <Typography>\n          Gender:\n          {data.gender}\n        </Typography>\n      </AccordionDetails>\n      <AccordionActions>\n        <Button color=\"secondary\" variant=\"outlined\" onClick={handleDeny}>\n          Deny\n        </Button>\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleAccept}\n        >\n          Accept\n        </Button>\n      </AccordionActions>\n    </Accordion>\n  );\n};\n\nUnverifiedUser.propTypes = {\n  data: PropTypes.shape({\n    _id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default UnverifiedUser;\n","/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\nimport axios from 'axios';\nimport serverUrl from './utils/server-url';\nimport { raiseAlert } from '../reducers/alerts.reducer';\nimport {\n  denyUser,\n  fetchUnverifiedUsers,\n  verifyUser,\n} from '../reducers/unverified-users.reducer';\n\nexport const fetchUnverifiedUsersThunk = () => async (dispatch) => {\n  await axios({\n    method: 'GET',\n    url: `${serverUrl}/users/unverified`,\n  })\n    .then((response) => {\n      const { data } = response;\n      dispatch(fetchUnverifiedUsers(data));\n    })\n    .catch((error) =>\n      dispatch(\n        raiseAlert({\n          message: error.response.data.error,\n          variant: 'error',\n        })\n      )\n    );\n};\n\nexport const verifyUserThunk = (id) => async (dispatch) => {\n  await axios({\n    method: 'PATCH',\n    url: `${serverUrl}/users/verify/${id}`,\n  })\n    .then((response) => {\n      const { data } = response;\n      dispatch(verifyUser(id));\n\n      raiseAlert({\n        message: data.message,\n        variant: 'success',\n      });\n    })\n    .catch((error) => {\n      dispatch(\n        raiseAlert({\n          message: error.response.data.error,\n          variant: 'error',\n        })\n      );\n    });\n};\n\nexport const denyUserThunk = (id) => async (dispatch) => {\n  await axios({\n    method: 'DELETE',\n    url: `${serverUrl}/users/deny/${id}`,\n  })\n    .then((response) => {\n      const { data } = response;\n      dispatch(denyUser(id));\n\n      raiseAlert({\n        message: data.message,\n        variant: 'success',\n      });\n    })\n    .catch((error) => {\n      dispatch(\n        raiseAlert({\n          message: error.response.data.error,\n          variant: 'error',\n        })\n      );\n    });\n};\n","import { Dialog, DialogContent } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { generate } from 'shortid';\nimport UnverifiedUser from './UnverifiedUser';\nimport { fetchUnverifiedUsersThunk } from '../../store/thunks/verify.thunks';\n\nconst VerifyUsersDialog = ({ isOpen, onClose, unverifiedUsers }) => {\n  const dispatch = useDispatch();\n\n  if (unverifiedUsers.length === 0) {\n    onClose();\n  }\n\n  useEffect(() => {\n    dispatch(fetchUnverifiedUsersThunk());\n  }, []);\n\n  return (\n    <Dialog open={isOpen} onClose={onClose} fullWidth>\n      <DialogContent>\n        {unverifiedUsers.map((user) => (\n          <UnverifiedUser data={user} key={generate()} />\n        ))}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nVerifyUsersDialog.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  unverifiedUsers: PropTypes.arrayOf(\n    PropTypes.shape({\n      gender: PropTypes.string,\n      _id: PropTypes.string,\n      name: PropTypes.string,\n      email: PropTypes.string,\n      code: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default VerifyUsersDialog;\n","import {\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport AddUser from '@material-ui/icons/GroupAdd';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport PropTypes from 'prop-types';\nimport { raiseAlert } from '../../store/reducers/alerts.reducer';\nimport { closePanel } from '../../store/reducers/panel.reducer';\nimport VerifyUsersDialog from './VerifyUsersDialog';\nimport LocaleSelect from '../LocaleSelect';\n\nconst VerifyUsersButton = ({ handleAddUserClick, itemText }) => (\n  <ListItem button onClick={handleAddUserClick}>\n    <ListItemIcon>\n      <AddUser />\n    </ListItemIcon>\n    <ListItemText primary={itemText} />\n  </ListItem>\n);\n\nconst AdminPanel = () => {\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const dispatch = useDispatch();\n  const open = useSelector((state) => state.panel.open);\n  const locales = useSelector((state) => state.locales.locale.adminPanel);\n  const isAdmin = useSelector((state) => state.auth.isAdmin);\n  const unverifiedUsers = useSelector(\n    (state) => state.unverified.unverifiedUsers,\n  );\n\n  const handleAddUserClick = () => {\n    if (unverifiedUsers.length === 0) {\n      dispatch(\n        raiseAlert({\n          message: 'There are no users left to check',\n          variant: 'warning',\n        }),\n      );\n    } else {\n      setOpenDialog(true);\n    }\n  };\n\n  return (\n    <>\n      <Drawer open={open} anchor=\"right\" onClose={() => dispatch(closePanel())}>\n        <List>\n          {isAdmin && (\n            <VerifyUsersButton\n              handleAddUserClick={handleAddUserClick}\n              itemText={locales.verifyUsers}\n            />\n          )}\n          <ListItem>\n            <ListItemIcon>\n              <LanguageIcon />\n            </ListItemIcon>\n            <LocaleSelect />\n          </ListItem>\n        </List>\n      </Drawer>\n      <VerifyUsersDialog\n        isOpen={openDialog}\n        onClose={() => setOpenDialog(false)}\n        unverifiedUsers={unverifiedUsers}\n      />\n    </>\n  );\n};\n\nVerifyUsersButton.propTypes = {\n  handleAddUserClick: PropTypes.func.isRequired,\n  itemText: PropTypes.string.isRequired,\n};\n\nexport default AdminPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport VoteIcon from '@material-ui/icons/HowToVote';\nimport { useSelector } from 'react-redux';\n\nconst CandidateCard = ({ data, onClick }) => {\n  const locales = useSelector((state) => state.locales.locale.candidateCard);\n  return (\n    <Card style={{ maxWidth: 500, width: 250 }}>\n      <CardHeader\n        avatar={<Avatar>{data.name[0]}</Avatar>}\n        title={locales.candidateCard}\n      />\n      <CardContent>\n        <Typography>{data.name}</Typography>\n        <Typography>{data.code}</Typography>\n        <Grid container justify=\"space-evenly\" style={{ marginTop: 10 }}>\n          <Grid item>\n            <Typography>{data.career}</Typography>\n          </Grid>\n          <Grid item>\n            <Typography>\n              {data.semester !== ' ' ? `Semester: ${data.semester}` : ''}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        <IconButton onClick={() => onClick(data._id)}>\n          <VoteIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n};\n\nCandidateCard.propTypes = {\n  data: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    career: PropTypes.string,\n    semester: PropTypes.number,\n  }).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default CandidateCard;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable operator-linebreak */\nimport { IconButton, makeStyles } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { generate } from 'shortid';\nimport BackIcon from '@material-ui/icons/ArrowBack';\nimport { useHistory } from 'react-router';\nimport CandidateCard from './CandidateCard';\nimport { vote } from '../../store/thunks/election.thunks';\n\nconst useStyles = makeStyles(() => ({\n  votingPanel: {\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n  },\n}));\n\nconst VotingPanel = () => {\n  const candidates =\n    useSelector((state) => state.election.currentElection.candidates) || [];\n  const electionId = useSelector((state) => state.election.currentElection._id);\n  const userId = useSelector((state) => state.auth._id);\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const onClick = (candidateId) => {\n    dispatch(vote({ electionId, userId, candidateId }));\n    history.push('/election');\n  };\n\n  const onBackClick = () => {\n    history.push('/election');\n  };\n\n  useEffect(() => {\n    if (candidates.length === 0) {\n      history.push('/');\n    }\n  });\n\n  return (\n    <>\n      <IconButton onClick={onBackClick}>\n        <BackIcon />\n      </IconButton>\n      <div className={classes.votingPanel}>\n        {candidates.map((candidate) => (\n          <CandidateCard data={candidate} onClick={onClick} key={generate()} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default VotingPanel;\n","/* eslint-disable react/react-in-jsx-scope */\nimport './App.css';\nimport { Route, Switch } from 'react-router';\nimport { HashRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport Login from './components/login/Login';\nimport Dashboard from './components/dashboard/Dashboard';\nimport AuthRoute from './components/AuthRoute';\nimport ElectionDashboard from './components/election/ElectionDashboard';\nimport AlertMessage from './components/AlertMessage';\nimport AdminPanel from './components/admin-panel/AdminPanel';\nimport VotingPanel from './components/election/VotingPanel';\n\nconst useStyles = makeStyles({\n  app: {\n    height: '100vh',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.app}>\n      <AdminPanel />\n      <AlertMessage />\n      <HashRouter>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <AuthRoute path=\"/vote\">\n            <VotingPanel />\n          </AuthRoute>\n          <AuthRoute path=\"/election\">\n            <ElectionDashboard />\n          </AuthRoute>\n          <AuthRoute path=\"/\">\n            <Dashboard />\n          </AuthRoute>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport fetchUsers from '../thunks/user.thunks';\n\nconst initialState = {\n  users: [],\n};\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    setUser(state, action) {\n      state.users = action.payload;\n    },\n  },\n  extraReducers: {\n    [fetchUsers.fulfilled]: (state, action) => {\n      state.users = action.payload;\n    },\n  },\n});\n\nexport const { setUser } = usersSlice.actions;\nexport default usersSlice.reducer;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport auth from './auth-token.reducer';\nimport dialog from './dialogs.reducer';\nimport election from './elections.reducer';\nimport alert from './alerts.reducer';\nimport panel from './panel.reducer';\nimport unverified from './unverified-users.reducer';\nimport users from './users.reducer';\nimport locales from './locales.reducer';\n\nconst rootReducer = combineReducers({\n  auth,\n  dialog,\n  election,\n  alert,\n  panel,\n  unverified,\n  users,\n  locales,\n});\n\nexport default rootReducer;\n","/* eslint-disable no-undef */\n/* eslint-disable no-underscore-dangle */\nimport { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './reducers/reducer';\n\nexport default configureStore({\n  reducer: rootReducer,\n});\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable no-undef */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { config as dotenvConfig } from 'dotenv';\nimport App from './App';\nimport store from './store/store';\n\ndotenvConfig();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}